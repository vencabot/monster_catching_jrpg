Our goal here is to make a monster-collecting JRPG in the style of games
like:
    Pokemon
    Dragon Quest Monsters
    Robopon
    Digimon
    Shin Megami
    Medabots

    Suikoden
    Chrono Cross
    Final Fantasy Type Zero
    Wild Arms 4
    Lufia 2
    Phantasy Star I (pay to revive characters)

//    Advance Wars
//    Front Mission
//    Ogre Battle
//    Final Fantasy Tactics
//    Shining Force
//    Valkyria Chronicles

We can broaden our horizons by looking at these not as "monster collecting"
games, but rather JRPGs where you have a LOT of characters that you can move
onto and off of your party.

Any game where your investment into an individual character isn't as
significant as the party-makeup that you decide on.

These are all games where your character-growth decisions are on a spectrum of
significance compared to what characters you choose to put on your party.

Another primary aspect of a "monster-collecting" game is the
monster-collection aspect. It's about traveling a game world and discovering
new characters to add to your party.

We need to have a LOT of characters.
The player needs to be incentivized to explore to COLLECT those characters.
There needs to be some interesting decisions to make regarding which
characters the player ends up using.

For the sake of simplicity, since the point of this game-development project
is for us to come together and learn about game-design, we should lay some
ground-rules so that we don't get too ambitious.

For instance, let's focus on 1-on-1 character battles (in the vein of
Pokemon).

Let's focus on the game being 2D. We're going to be developing the game using
Pygame, which is especially good at making 2D games.

If we're going to focus on making a one-on-one "monster battle" RPG, we
should look at what we can TAKE from these grid-based tactics JRPGs.

Character customization is strong in tactics-style games. But the downside of
this is that, in some of these, you end up using mostly the same team for the
whole game. So, maybe what we can take from that is that we need to strike a
balance between making it interesting to develop a character but also giving
each character some limits so that the player doesn't really want to use one
set of characters for the whole game.

We're gonna have a lot of characters to choose from, so it would make sense to
have a major of the part of the game being choosing which characters you want
to use for which situations.

An idea might be to have multiple teams. That way, you're incentivized to use
a wider variety of characters.

Following our tactics-game analogy, maybe we could think of each monster as
representing a 'class'. Every class has different tools, and they should all
be interesting, but you shouldn't be able to tackle every challenge in the
game using the same set of tools or classes.

What we're fixating on, right now, is how do you strike a balance between
making it to fun to grow a character but also not getting the player too
attached to that character, so they can still be swapped around.

In Pokemon 1st gen, you mostly just grind to level up characters, and that's
kind of boring. Aside from that, you can choose which skills they learn, and,
to an extent, when they evolve. I personally feel like Pokemon's approach to
character growth might be a bit TOO hands-off for this project.

On the other hand, we've listed a lot of games where the player is rewarded
for sticking with the same few characters for the whole game. In those games,
the characters can have their classes dramatically changed throughout the
game. They can be developed to fulfill a wide variety of needs. They can wear
all kinds of different equipment that can have an impact on their function. I
feel like that might be a bit TOO deep of growth per-character.

When a character levels up, what happens? What decisions does the player make
regarding character growth?

Let's dial it back. What decisions are coming into play when deciding which
characters you want to bring onto your party.

In Pokemon, you consider type-matchups. Certain types are weak or strong
against other types, and that's a major influence on what characters you
bring onto your party.

In classic JRPGs, a major factor of character choice would be your opponent's
defense weaknesses. Some enemies are weaker to physical attacks, or, more
specifically, 'blunt' attacks. Or 'piercing'. Or 'slashing' attacks. Or
magical attacks of a variety of elements. Maybe an opponent is especially
evasive, so you need a character that has a lot of accuracy. Or maybe they do
a lot of damage, so you need a character that has a lot of health or defense.

We're talking about choosing a team based on what types of opponents you
expect to fight.

Maybe, in each battle, the player will have to make some difficult decisions
regarding how to consume their characters' resources. Compare this to games in
the Final Fantasy franchise, where individual battles are sometimes trivial,
and if there are decisions to make regarding resource consumption (HP, SP,
MP), they're made over the course of dungeon rather than a single battle.

So maybe our fights could be longer, or maybe the party is somehow healed
between battles to encourage the player to consume their resources more
aggressively.

KG brings up the idea that we could solve some of our problems regarding
incentivizing the player to use a wider variety of characters by having some
characters be removed from the party when they die or something else happens
to permanently or temporarily remove them from the game.

Of course, in other games that use a mechanic like that, there becomes a
different decision-making process regarding how much to invest in a single
character when you know that you might not always be able to use them.

I really like the idea that KGtheLegend put forward: remove characters from
the party, in battle, on a permanent or semi-permanent basis as a way to
encourage the player to A.) be very careful regarding which characters they
pick to bring into battle, and B.) use more characters, because maybe
the player's original favorites might be incapacited.

At the same time, I feel like it might be a bit harsh to permanently remove a
character from the game, if only because that would have a lot influence over
the way that we design our character-growth mechanics. I feel like, if you
expect that your character might permanently die, we can't really ask the
player to invest too many decisions into that individual character's growth.

Maybe, when a character is "killed" or removed from the game, we can think of
some way for the player to "buy" them back. But the player wouldn't have
access to that character for some amount of time.

HereGoes mentions it would be cool to let the player choose their main
character.

Something that I think about, regarding monster-collection games like
Pokemon, is that the "protagonist" or "trainer" or whatever they may be
typically doesn't get a lot of mechanical growth.

In Pokemon, the character can train any number of monsters, but the trainer,
himself, doesn't really become any more powerful throughout the game.

If we allow the player to choose their own main character, maybe each
"trainer" or "protagonist" can have different mechanical attributes that
influence they way manage their team. Maybe the protagonist you choose
imparts some kind of bonus to your team, or maybe they can earn some kind of
currency (EXP, etc.) that they can use to enhance or otherwise give a bonus to
their entire team. That way, the protagonist can grow along with the
individual party members, AND there could be an interesting decision to be
made regarding WHICH main character you choose to play.

If we can have the player shift control between more than one protagnist,
that would definitely incentivize the player to experiment with different
team-layouts and monsters. In fact, maybe different protagonist have access to
different party members / monsters / classes , at least early-on, so the
player is encouraged to try new things and not just settle on one
team-makeup.

KD puts forth the idea of how much cooler Pokemon would be if we could
control the main character's party as well as the main antagonists' team.
That makes me think of how interesting to be to experiment with different
MEANS of COLLECTING your party members. In Pokemon, the trainer catches them
in the wild, in balls, but Team Rocket steal their monsters. That could be
interesting: you can choose between different protagonists -- maybe even more
than one in a single playthrough -- and perhaps one of the factors that sets
them apart is the condition they need to meet to add new characters to their
team.

Let's do a recap of what we fixated on the most, today:
    * Individual encounters being more resource-intensive than in more
      casual JRPGs. Maybe characters need to be sacrificed in order to win,
      sometimes. Maybe your 'mage' will have to totally exhaust their ammo.
      You might have to make more difficult decisions more often in combat.
      There are greater consequences for your decisions in individual
      encounters.

    * The player may be given the opportunity to choose between different
      protagonists, each of which may come with their own set of gameplay
      ramifications. Maybe they give their respective teams different buffs.
      Maybe the way that they collect new characters varies. Of course their
      narrative varies. These characters, themselves, can be grown in a
      way that's distinct from the way that the individual "monsters" grow.
      Maybe, when your protagonist dies, you can pick up from another
      characters' perspective.

    * Between the fact that you might have multiple teams (one for each
      protagonist) and each of those teams, because of the trainer's bonus,
      will incentivize different types of play, and because characters might
      need to be sacrificed in battle on a semi-regular basis, we've got
      some pretty strong incentive for the player to utilize a larger
      percentage of the game's available monsters / classes.

    * Although we discussed the idea of removing characters from the party
      as a way to make combat more interesting and to encourage the player
      to not overly rely on the same small team, perhaps the player can buy
      back "dead" characters or otherwise earn them back onto the team after
      some amount of time or difficult trial has been passed. That way,
      although the player will definitely need to replace their party-member
      on a temporary basis, they might feel safer to invest more into a
      characters' development, knowing that they won't PERMANENTLY die.

    * OhSeraph shared some really awesome musical contributions that really
      acted as a lot of inspiration for our game, in terms of narrative and
      gameplay style.

Look at 'evoland,' as mentioned by Zanzhu.






02/04/19

If we're making a JRPG (and we are), we could think of the issues of 'balance' as being issues of 'classes' or 'jobs' (in Final Fantasy).

We've been comparing our game to Pokemon, which is something you gotta do, but if we're speaking in broader terms, you could look at each Pokemon as falling into a certain class. Some Pokemon are 'warriors'. Some are 'wizards'. There's even a couple 'healers'. Some could be as thought of as 'rogues,' because they might have low physical attack by high critical.

Let's talk about our combat. How do you guys envision combat actually playing out? What's the UI like? How do you control your character? What sorts of things can your character do, and what can the opponent do?

I decided early on, for the sake of simplicity, that we'd be working with 1-on-1 battles in the same style as Pokemon. In Pokemon, you have a team, and your team make-up is significant, but in the first generation especially, combat is a 1-on-1 affair, and both teams can swap characters in and out. It's sort of like a tag battle, basically.

If we have one-on-one tag battles, how is the make-up of your team important?

In Pokemon, the real significance of your team is based on 'type-matchups'. So, certain characters are particularly strong or weak against other character types, and so you're mostly just swapping characters around to work around these simplistic type match-ups.

I think we should be a little more creative than that.

Austin recommends something sort of similar to Pokemon's 'type-matchup' system, where a character might do 'slashing' damage and the opponent's armor might be resistant or vulnerable to that type of damage.

Immediately, I want to point out that I like this idea more than Pokemon's type system right off the bat. Because, in Pokemon, your 'type' is one-dimensional. It affects the sorts of attacks you DO and the sorts of damage you TAKE. If our characters can have a sort of 'weapon' (whether it be 'equipped' or just a permanent part of the character) and a sort of 'armor', we get more variety in our match-ups.

Austin's talking about 'jobs' as well. I recently played through a monster-collecting JRPG called World of Final Fantasy. As compared to Pokemon, WoFF allowed you to give your monsters 'classes'. It was sort of like how Pokemon 'evolve' into stronger and slightly different types, except that you could also devolve. You could move between forms, and skills that you learned in one form could sort of be applied to another form, sort of like traditional multi-classing in RPGs.

Another concern we have is that, if individual monsters are too interesting and can be customized too much, it would defy the need to switch characters. Every character needs to have some limit to what their role is capable of so that the player is encouraged to swap them around to create an ideal deck for different situations. If characters are too flexible, there's no need for that.

On the other hand, if characters are TOO LIMITED, they won't be interesting to micro-manage. In Pokemon, your characters basically only level up from experience. And they MIGHT learn a couple of different skills that you can choose from. For the most part, though, you don't really have any agency over the way they grow.

BestMatchup put forward the idea of, at least internally, within our team, coming up with a set of 'roles' that 'monsters' can fit into. Maybe the particulars of how they go about fulfilling that role can vary DRAMATICALLY, but, as game designers, maybe we can think of the different 'pokemon' or 'classes' or whatever you want to call them as fitting into a set of roles.

Let's talk about how combat is going to play out.

In Pokemon, when you swap characters to create a better match-up for yourself, you incur a penalty. That's a big part of how Pokemon battles play out: although you have a team of six, and you can bring any of those creatures out into battle, one-at-a-time, you cannot attack on the same turn that you swap characters, so your opponent gets a free hit on you. That's a MAJOR DISINCENTIVE to swap characters. You really want to put a lot of strategy into the order that you send your characters out in.

Is that something that we want to copy? Or do we want to make it more free for the player to swap characters? If they can swap characters too freely, how is that dissimilar from an RPG where you control the entire party at once?

We've got 1-on-1 battles, but if characters can be swapped without a penalty, how do we determine, for instance, which character is taking damage from the opponent on THIS turn? If I want to use a 'healer' character to heal the 'tank' character, that makes the healer vulnerable to damage, right? We swap out the tank for the healer, and the healer casts some kind of spell, but now the healer is vulnerable because they just took an action?

We're kind of working within the idea of a one-on-one combat system where characters are tagged in-and-out.

I'm not sure I understand Kenny and Austin's suggestion in the chat, but what I get from it is, what if you could, like, have the tank take a hit, and then quickly swap out to the healer, who could use a healing skill, and then we could swap the tank back in before the opponent gets their turn?

The core riddle of our combat gameplay is that characters who are not tagged in are not vulnerable, which is great for us, but they also can't act, which sucks for us. So, there's a risk-reward with having any character take an action, because, to take an action, they have to be tagged in. And if they're tagged in, they're vulnerable to damage.

We're talking about, in one-on-one tag battles, how do we make the party dynamic more interesting.

Austin phrases his idea like this, "You have a timer of 25 seconds. If you swap a character out at, say, 10 seconds, the time could still be going while you swap. Then, you have whatever time is left to complete your turn."

In Austin's example, we're talking about LITERAL SECONDS. And that's what Kenny and I are talking about: the tactical difference between real-time and wait-time battles.

I think what Austin's suggestion could be interpreted as, in a more abstract sense, is that, on a turn, you're given a certain amount of resources (seconds). Different actions can consume a different amount of those resources (different attacks take different amounts of time). On your turn, you can take any number of actions as long as they fit within that resource limit (you can do as many things as you want as long as you have time on your turn).

If we were going to make this into slower-paced, tactical battles, we could give the player something like "AP". Every turn, you get 25 "AP". You can do whatever you want with that AP, including swapping characters -- but when you run out of AP, whoever is left tagged in is vulnerable to the opponent's turn.

What's kind of cool about that is that maybe different protagonists have different amounts of that resource.

Another trapping of our game-design philosophy that I want to point out: because we're in the 'monster collecting' genre, our opponents will have access to the same tools we do. It's not like Final Fantasy, where our team consists of "characters" and the enemy team consists of baddies that deal in different growth mechanics. The enemy units, in our game, will consist of the same types of units that we have access to. So our units will be balanced to fight each other, at some point.

I feel like we've made some good progress. Let's recap:

* Combat starts with our team's turn. On our turn, we have a certain amount of time (25 seconds). Different actions take different amounts of time, and, once we're out of time, the opponent gets their turn. And the loop continues.

* Only the character who took the last action on a turn is vulnerable to the opponent. It's tag-based combat, so a major of the strategy will be to organize the actions on your turn so that the last action leaves the character vulnerable that you want to be vulnerable.

* Obviously, more powerful actions will consume more time. Maybe some actions will be especially useful because they take a very little amount of time.

* Perhaps different 'protagonists' or 'trainers' might have different amounts of time to take their turn. Some heavy-hitting protagonists might get a bonus to aggression for their whole team, but they'll have less time to choose multiple actions.

Kenny puts forth the question: should there be a bonus for not using all of your AP. I say no, there shouldn't be. I want to encourage the player to consume all of their resources. I don't want to reward the player for saving and being conservative. I want for the player to feel at liberty to use everything they have. The fights are gonna be really difficult, ideally; I would like for them to be so strenuous that the player always wishes they had more AP. I don't want them to feel at liberty to not use their entire turn so that they can get some kind of bonus.

If we penalize the player for NOT using their AP, we're adding a whole different dimension of difficulty to the game, because now they have to do math on every turn to make sure that they get everything done they WANT to get done, AND end their turn on the character that they want to be vulnerable, AND they use ENOUGH of the CORRECT skills to consume as much of their AP has possible. Then we're looking at skills whose entire purpose is to dump AP for that purpose. I'm not sure I'm 100% on board with that idea, but it is VERY interesting.

We're talking with HereGoes and Kenny in the chat: should swapping characters consume AP.

There's two ways to look at this problem, and it's all based around how many actions a single character can effectively take in a single turn. If each character is really only good for ONE skill that they have, then you really can't charge for swapping.

On the other hand, if it's interesting to the player for a character to take more than one action while they're tagged in, maybe it would make combat MORE interesting to charge for swapping. That way, the player has some incentive to utilize a single character's abilities more effectively.

Both sides of the battle will follow exactly the same rules.

We're discussing in the roles in the chat, again. Maybe different units have 'primary' roles, 'secondary' roles, and maybe even 'tertiary' roles -- and the skills they can learn are based on these roles. Maybe if you have a certain role as your 'secondary,' you don't have access to the most powerful skills of that role -- and if it's your tertiary, you only have access to the most basic skills of that role. You can then mix-and-match skills from the various roles, but whatever role is your 'primary' is likely to give you the most powerful and useful skills.

BestMatchup recommends an idea where the player is encouraged to inflict some minimum amount of damage to the enemy team or else they get some kind of bonus on their next turn.

BUT WHAT IF the protagonist or 'trainer' that you choose determines what sort of condition you have for getting a bonus in battle. Maybe some trainers get a bonus if their team doesn't take enough damage on the previous turn. Maybe other trainers get a bonus if their team doesn't take damage of a certain element on their turn. Maybe another trainer gets a bonus if the opposing team has some number of status ailments on their team.

This would encourage a variety of different playstyles not only because you want the bonus for YOUR team, which means meeting certain conditions, but also because you want to PREVENT your opponent from getting THEIR bonus by interrupting THEIR conditions.

HereGoes talks about Persona as a sort of groundwork for looking at how different characters can fill more than one role, even if they're not equally effective at all roles. One of my favorite games of all time, Final Fantasy XIII, does something very similar, where characters they have the potential to fill certain roles, but not EVERY role, and they specialize in one role in particular.

We could look at every 'monster' (Pokemon, yokai) as having a certain 'role' which determines which skillsets they have access to -- and maybe they have more limited access to their 'secondary' and maybe 'tertiary' skillsets.

I kinda like this idea because choosing skills from a set adds interest to the micro-management aspect, and that's something that I'd really like to have in the game.

Like we mentioned earlier, Pokemon doesn't really have a lot of micro-management. The monsters in that game are pretty set in stone. You just pick the monsters you want, and that's the limit of your party design. On the other hand, if you have too much freedom to micro-manage an individual monster, it discourages you from ever having to swap party members. You could be set to complete the game with just one party.

As we continue to look at ways that your 'trainer' or 'leader' could have perks that affect your whole team, RedPanders brings up the idea that maybe you could have a trainer that empowers the skills or characters that fit a certain 'role' or 'class' or 'type'.

I think, personally, it'd be more interesting to have an AP penalty for swapping characters. It means that you have to be more careful about when you swap, and it means that, when you tag someone in, you probably want to make the most use of their skills that you can before swapping again.

The alternative would be to look at every character as though they were an ability, and you can swap them in and out freely on your turn to use their respective abilities in any order.

But, you know, if you charge the player to tag, that makes it more difficult to end the turn on your tank, which I think is interesting.

The AP, as the 'turn currency', is not something that is intrinsic to the monster / unit. The turn currency is attached to the trainer / leader. Although, maybe monsters / units could have some kind of attribute (speed?) that acts as a multiplier for their ability cost in AP. So, maybe a very 'fast' unit could conduct the same action as a 'slow' unit, but it would cost less AP.

Today, I'm really glad that we've focused more on combat flow, because I really wanted to talk about that and nail some things down. Here's what we've discussed so far:

* Because we're a 'monster collecting JRPG,' our player characters will form a 'team' or a 'deck' of units / monsters. Even though we're talking about 'teams' using the same nomenclature as those of team-based RPGs like 'Final Fantasy' or 'Breath of Fire' or 'Persona,' our combat is ONE-ON-ONE. It's a tag-based system that you could think of as theoretically taking place in a wrestling ring. Only one character from each team can be in the ring at the same time, and only the character that's in the ring can take an action or take damage.

* When the leader's turn begins, whatever unit is currently tagged in can take any number of actions, all of which will draw from that leader's pool of 'AP' (turn currency). Those same actions might also draw from the unit's 'MP' or 'SP' or 'ammo'. As long as the leader has AP, they can use that AP to tag in another character from the team, who can then continue using up the AP with THEIR abilities.

* So, unlike Pokemon, our turn is not consumed by taking a single action. In Pokemon, you have turns that go back and forth between two opposing characters that can be swapped for another unit on their team, but each of those characters can only take ONE action before their turn is consumed. In our game, the leader can instruct their team to take any number of actions on a single turn until their AP is consumed.

Although only the 'tagged in' character can directly take damage or be targeted for traditional 'status changes' (poison, paralyze, whatever), I like the idea that some skills might passively affect either the ALLY party or the ENEMY party. Maybe, by having a certain character on your team, all characters on the team get a buff. Maybe by using a certain ABILITY, as HereGoes says, maybe you can exert some control over how your opponent tags characters. Maybe you can make tagging cost more AP. Maybe you can lock a certain character on their team from being tagged in for the next turn.

So, even though only the tagged characters can take or deal damage, there may never-the-less be some mechanisms at play that have a broader effect on a team.

BestMatchup raises the idea of 'counter attacks' or 'counter reactions' of some kind that take place when the enemy takes a certain action.

I want to talk more about that when we have the time to look more in-depth at how our characters are going to grow and be customized. I'm going to say, one more time, because I do think it's very important and worth reiterating, that there's a very careful balance to be struck between having a lot of agency over how individual characters GROW (because that's interesting and fun), but also limiting that agency -- limiting the ways that we can customize our characters -- to encourage the player to constantly be changing their party layout to make the most of MASSIVE roster of potential units (because we're a monster-collecting JRPG), because THAT'S fun and interesting.

So we want to strike a balance between having it be interesting to micro-manage individual units, but also have it not be so flexible that the player doesn't feel like they ever need to try using a different type of unit.

So, in the future, we're really going to dedicate a lot of thought to how our characters -- whether we're talking about 'leaders' or 'units' -- grow.

Certain units have abilities that debuff untagged units (but these should be very rare). It's very interesting, but it undermines the idea that untagged units should be more-or-less safe, and the risk-reward of the game comes from wanting to use a unit's abilities but not wanting them to be left tagged into the arena at the end of the turn, where they'll be vulnerable.

Kenny puts forth the idea, which he says is inpsired by FF6, that some dungeons or tasks or scenarios may require the player to use more than one team.

Although we haven't put the idea forward strictly speaking, up to this point, I think that it more-or-less goes without saying, because I really like the idea of the player taking charge of more than one leader, and, by extension, more than one team. I feel like, with different leaders imparting their team with different perks, this will really help the player explore a wider variety of unit types -- which is our goal. If we're going to design 100 different unit types, we want to encourage the player to try them all and find out which leaders they work best with and how best to use them in a team. So it makes sense, then, to have the player control multiple leaders and their teams to complete a single scenario.

Although we're not going to have individual COMBAT sections where more than one team fights on the same side at once, we may very well have concurrent or related fights where the player will be moving between teams for different fights.

To be clear, more powerful abilities will consume more of the turn's AP, and / or more ammo from the unit.

The idea was brought up that maybe, for the sake of simplicity, the individual monsters don't level up -- rather, the leader levels up, and all of the units that they're leading might have power reflecting the level of their leader.

I kind of like the idea that, maybe, you have a certain amount of 'skill points' or 'level points' to distribute to your team mates based on the level of your leader. This idea really appeals to me because it encourages the player to swap out units regularly without having to worry about whether or not some unit has been grinded up to par.



02/06/2019:

After reading last night's discourse on the Discord server, one thing that I do want to emphasize is that, to me, a good game isn't made by its story or its individual mechanics. Those are definitely major factors that can enhance the experience of playing a game, but what 'gameplay' boils down to, for me, is pretty simple:

It's how interesting the player's decisions are. How difficult those decisions are to make. How impactful the consequences of those decisions are. How often the player gets to make these decisions. Are those decisions really impactful or worthwhile.

* Zanzhu brings up the idea that maybe, whether or not a character is 'sacrificed' or is 'destroyed' or otherwise falls in combat, maybe the player only has access to them for some limited amount of time. His example is Jagged Alliance 2, where units are hired for some length of contract and then have to be re-hired.

We're discussing the idea of binding a unit to a particular object as a way to make gameplay more interesting (and this would also impact the narrative).

Points that I would like make about this idea:

* When binding a 'character' to something that's more disposable, it allows us to think about 'durability' as an attribute of a character. Maybe they only last a certain amount of time. They're destructible.

* It allows us to forgo the trappings of RPGs that have smaller parties and more micro-management per-character. In Final Fantasy, you only have six units, and so it makes sense to worry about things like what weapon they're holding AND what armor they're wearing AND what accessory they have on. In a game where we're going to have maybe more than a hundred characters, maybe they don't individually have armor and such that can be swapped, but maybe, when you recruit them, you have to pick an item that will influence their growth -- and that could be your decision that's parallel to 'equipment' in other RPGs. But because you can't change it, it encourages to recruit more units and try different things.

* These 'sparked' or 'bindable' objects could effectively act as treasure for the player to find or buy with currency. That's kind of interesting: you have a collection of 'spirits' that you've recruited, but you also have a collection of objects that you can use to bind them together.






Before we call it a day, I had an idea that I'm afraid I'm gonna forget if I don't write it down:

* In combat, we talked about how the player has a certain of 'AP' or 'turn currency', and they can use that currency to act multiple times with the in-ring character or they can tag another character into the ring, and whoever is left in the ring when the turn currency runs dry is going to have to face the aggression of the opponent. We also, on Discord, discussed the possibility of giving the leader some actions that can consume AP.

That being case, I had the idea of having a bonus to action effectiveness that goes up as the remaining AP of the turn goes down. So, the less AP you have remaining when you take an action, the more powerful that action is. I think that's interesting because it adds a risk-reward element where your most powerful action is the last one you take, and so your most 'aggressive' character or your 'healer' might be left in the ring to take the opponent's assault. By extension, 'tank' characters would have to have pretty lame abilities so that it'd be a tough decision to end the turn with THEM in the ring, because you'd be sacrificing more damage or healing or whatever that you could've gotten if you ended the turn with a non-tank characters in the ring.


* Panders also brings up that there's already a disincentive to end the turn on a tank: if it costs AP to tag other characters in, then you're going to have to tag someone else in at the START of your next turn, because you probably don't want to spend the whole turn as the tank. So, if you're super conservatively, every turn would start with swapping the tank OUT and then end with swapping the tank back IN, which could be expensive.




What Kenny said about his uncertainty toward the narrative idea of the protagonists being able to 'gift' their power: if they could do that, you'd think it'd be more of a part of the game.

Up to this point, we've sort of been looking at the idea of 'multiple team leaders' or 'protagonists' as being closely tied to the story. But what if the player could make a choice about which characters he gives this power to, and that would tie into our idea of having several different 'leaders' who all have their own perks, and growth trees, other buffs for their team: maybe the player has to decide which of these characters and their respective play-styles to 'activate'. In this example, we wouldn't just be playing as the main protagonist and the rest of their group or family, but we'd be playing as the main protagonist and whoever the player chooses to gift their power to.

Maybe the character choices (narrative decisions) that a character makes could influence what sorts of units or classes or whatever that playable character has access to. Their personality affects their team structure, essentially.

Steve points out that it's kind of a cool idea that our playable characters represent a diverse number of objectives that may be 'good' or 'evil' or otherwise personally motivated. They're all personally motivated.





02/11/2019

Today, we're going to be talking more in-depth about our game's primary combat system. Before I start rattling off new ideas, let's review what we already know about our combat:

*) Combat is 1v1 tag-style, similar to Pokemon. Only one character from each
   team can be taking action at one time.

*) Unlike Pokemon, characters can take more than one action per turn and can
   even tag in another character on the same turn. This is accomplished
   through an 'AP' system, where the 'trainer' starts each turn with a
   certain amount of AP to spend on turn-actions and the turn is only over
   when they either run out of AP or choose to end their turn.

*) AP cannot be saved between turns. This is meant to encourage the player
   to choose their actions carefully to consume as much of their AP each
   turn as possible.

*) Although unit actions all cost AP, as well as tagging, there are some
   actions that the leader character can take to consume AP as well. This
   might include using items or even calling upon special skills, although
   these skills would need to be fairly limited so that the player can't
   over-rely on them. The advantage of these skills would be that they can
   be used regardless of which unit is currently in the ring.

That's what we know as of right now. Here are some points that have been on my mind over the weekend:

*) I think that every unit in the game should have available skills from 3
   different 'classes'.

*) Basically, every 'class' in the game would be a list of abilities to be
   used in combat, and these abilities would be sorted in order of useful-
   ness or power or effectiveness. They'd be sorted into three groups:
   'Primary' abilities, 'Secondary' abilities, and 'Tertiary' abilities.

*) Each unit would have a 'Primary' class, 'Secondary' class, and 'Tertiary'
   class. The unit would have access to all of the abilities from their
   'Primary' class, the 'Secondary' and 'Tertiary' abilities from their
   'Secondary' class, and only the Tertiary abilities of their Tertiary
   class.

*) In Pokemon, it seems like the abilities that each Pokemon has access to
   is random or hand-picked for that unit. In our game, there would be a
   rigid set of classes which have access to certain abilities, and the
   abilities that a unit would have access to would be entirely based on
   their combination of Primary, Secondary, and Tertiary classes.

*) I think that would make balance and the decisions of who goes onto your
   team a little bit easier.

*) In Pokemon (and a lot of other JRPGs), there is a lot of cross-over in
   the intended usage of certain abilities. You'll almost always have a ton
   of skills that deal a small amount of physical damage. You'll also have
   a lot of cross-over in 'magic' skills, usually because they're of
   different 'elements'. I would really like it if we could minimize the
   amount of cross-over between abilities. I would like to avoid abilities
   that are just stronger versions of other abilities, which we may intend
   to be unlocked later. Ideally, every ability would have a unique and
   valuable purpose.

*) As a part of that, I think that we can give abilities interesting costs
   so that we can afford the player a variety of tactical options to go
   about accomplishing what they want to accomplish. For instance, we know
   that all abilities will carry an AP cost (which eventually brings about
   the end of the leader's turn). However, maybe they may also be balanced
   against having a limited number of uses per fight, or per turn. Maybe
   some abilities consume ammo that the unit is carrying (such as 'MP').
   Maybe some abilities consume HP, or will afflict an ally unit with a
   negative status change. Maybe using the ability will cost your entire
   party 5% of their HP. This is sort of an unusual way of looking at Skill
   cost in a JRPG, but I think that if we balance abilities against a
   variety of interesting costs, it'll make tactical decisions in combat
   more interesting.

*) Panders brings up the idea that maybe the 'Tertiary' abilities could be
   assigned to a unit NOT by their 'monster type,' but by some external
   factor, such as their equipment or something. In the past, I've pushed
   to have their equipment be permanently attached to them and affect their
   growth in some way, but I also feel like the idea of having it affect
   their Tertiary abilities could be interesting. On the other hand, the
   Tertiary abilities are kind of meawnt to be the least-interesting
   abilities. I sort of imagine the Tertiary abilities as being a minor way
   to impact battle and, maybe most importantly of all, a way to consume the
   remaining AP in a turn.

*) With respect for the fact that the 'Tertiary' abilities are only going to
   provide a very small augmentation to your overall strategy, I don't see
   why you shouldn't be allowed to define it, yourself, by choosing which
   equipment is bound to your units.

*) I also think that individual units could have a special 'perk' that
   gives them some unique property in battle. Previously, we talked about
   how each 'trainer' or 'leader' character could come with certain perks or
   passive traits or qualities that will influence the sorts of strategies
   you might use when bringing that leader (and their team) into battle.
   But I also think it could add interest to the experience of designing a
   party if each unit had one special trait that would affect how you use
   them in a team. Maybe they could passively buff the entire party by some
   small amount. Maybe they're an extremely powerful unit, but bringing them
   into the team results in some DEBUFF to either them or the party. Maybe
   some units, in battle, could debuff the enemy party just by being there.
   Maybe some traits are triggered only when a unit is in the ring, or maybe
   it triggers every time they're swapped into or out of the ring. The
   possibilities are endless.

*) So basically, what we know about 'units' so far is that they:
    *) Have some base attributes which affect their growth. JRPG stuff.
    *) Naturally have access to two classes' worth of abilities, but have
       restricted access to the abilities of their 'Secondary' class.
    *) They have a single piece of equipment permanently bound to them,
       which augments the attributes they get when they level-up and
       provides the unit with a 'Tertiary' class, which is even more
       restricted than their secondary class.
    *) They have a single 'perk' or 'passive' that makes the unit more
       interesting, tactically.
    *) The MAIN THING that we need to know is what 'attributes' or 'stats'
       our units have which will play out in battle.

*) For individual 'abilities', here's what we know so far:
    *) Abilities are attached to classes and are ranked in order of impact
       as 'Primary,' 'Secondary,' and 'Tertiary.'
    *) We know that every ability comes with one or more costs. At the very
       least, each ability costs some amount of the leader's AP to use, but
       they'll also have other costs and limitations associated with them.
       These could be of a huge variety of things. Basically, when you use
       an ability, there's gonna be a trade-off which is probably pro-
       portional to how powerful the ability is.
    *) Maybe some abilities have a limited number of usages per battle or
       per turn.

Panders brings up the idea that maybe abilities can be 'super charged' to
have greater effectiveness at some (relatively small) cost. An ability can
be powered up more or less based on whether it's in that units' Primary,
Secondary, or Tertiary class.

I think this is an awesome idea, but it also adds a lot of complexity (which isn't necessarily a bad thing). I feel like, 'boosted' abilities probably should have special qualities to them aside from just doing more damage or healing more health. Which would make it difficult to balance them all. On the other, maybe they don't need that, and perhaps you can only power-up lower-level abilities. Maybe, if 'Warrior' is your Primary Class, you can power-up Warrior's secondary abilities by 1 level and their tertiary abilities by 2 levels, essentially bringing them closer to the power of a primary ability.

Panders goes on to clarify that he's talking about essentially putting all abilities on the same level of usefulness (tertiary), but having some abilities (those ranked as 'Primary' or 'Secondary') be buffable to effectively make them much more useful, whether this be done on-the-fly during the turn (which would afford a HUGE amount of tactical power, maybe too much), or whether it be done on a permanent-basis while managing the character outside of battle. Effectively choosing how much AP some of their abilities will cost in exchange for making them more powerful.

I feel like we have a pretty well-rounded view of what makes units and leaders interesting, and we have a broad view of 

Panders goes on to clarify that he's talking about essentially putting all abilities on the same level of usefulness (tertiary), but having some abilities (those ranked as 'Primary' or 'Secondary') be buffable to effectively make them much more useful, whether this be done on-the-fly during the turn (which would afford a HUGE amount of tactical power, maybe too much), or whether it be done on a permanent-basis while managing the character outside of battle. Effectively choosing how much AP some of their abilities will cost in exchange for making them more powerful.

In general, I feel like we've got a broad idea of how combat is going to play out. In fact, I think we're almost ready to start designing classes (and, from there, we can start designing units). But we really need to decide on what kind of 'attributes' or 'stats' our units have so that we can get a deep-enough understanding of what sorts of situations might occur in combat to the point that we can really think about what classes will make the most sense.

    *) 'HP' is the amount of damage a unit can take before they fall. Many
       attacks will deal HP damage directly, and combat is over once all of
       the units on one team have had their HP reduced to 0. 'HP' is
       essentially directly tied to the 'win condition' of combat. A unit
       with high HP might be used effectively to absord damage for other
       units.

    *) 'ATK' is the indicator of how much damage a unit can do with direct,
       (physical?) attack abilities. A unit with high 'ATK' will likely be
       used to deal HP damage directly to the enemy team, where-as other
       units might have the responsibility of recovering from the opponent's
       turn or setting up an ATK unit to deal damage.

Here's a question: do we want for units to have 'elemental weaknesses'. I've played many RPGs where elemental weaknesses have been a factor that have been all-too-easy to ignore. They didn't add anything interesting to the gameplay. On the other hand, I've played games where 'elemental' and other weaknesses were HUGELY integral to combat and played a big factor in what skills and equipment my characters used. Even then, although I've enjoyed these games, I'm not 100% sold that seeing that my opponent has an elemental weakness really gave me an interesting decision to make.

The ultimate sinner in this regard, in my opinion, is the Final Fantasy franchise, which is considered to be among the most important JRPG franchises. In those games, you almost always have a class in the vein of 'black mage,' which has access to all of the elemental magics. So attacking the enemy's weakness is as simple as choosing the right spell. They all have the same cost. They're all virtually the same: they just have different names and hurt different foes. It's not that interesting.

And in other games where you might know, in advance, that enemies are weak to fire, you might make the prudent decision to outfit your team with fire-infused weapons. You're doing more damage. You're rewarded for your foresight. But if you could've won just as easily without equipping 'fire swords,' there's really no point. On the other hand, if you can't easily win without equipping 'fire swords,' then it's basically mandatory, and the decision to equip swords isn't that interesting.

In Pokemon, I feel like it falls into the latter-side of the 'fire sword' example above. Types are everything in Pokemon (Gen 1), and FREQUENTLY result in one-shot kills. So, the bulk of the 'tactics' is just knowing what element your opponent is going to be using and picking the opposite element. That's not interesting. It actually sucks energy AWAY from the tactical side of the game. I wouldn't want for elemental weaknesses to take away from the interesting decisions you make. If it's going to be a factor, it would need to make the game MORE interesting.

I've been using the term 'elemental,' since it's most common in JRPGs, but that's the same for units that are weak to 'smash' damage or 'pierce' damage. Some RPGs basically apply 'elements' to physical attacks as well, and it's basically the same.

If we're looking at ways that elemental weaknesses (and strengths) could make tactics MORE interesting, I think it's interesting that, if you know the enemy team has a unit with abilities that one of your team members is weak against, you have to be more careful about when you send your unit out. That's kind of interesting. That adds a layer of tactics.

*) As a sub-note, maybe part of what makes elements less interesting in 'Pokemon', for me, is that every creature in the game has a strict list of things that they're strong and weak against, and most of the good abilities in the game play into that system.

*) Maybe we could implement elemental strengths and weaknesses on a scale that isn't a factor for every single match-up in the game.

*) Maybe we could balance it such that NOT EVERY UNIT has any elemental
   strength or weakness. In fact, maybe it could be somewhat rare.

*) For instance, maybe we have a unit that's otherwise very powerful. It's
   got good abilities and good stats. One of its downsides, however, is that
   its weak in certain match-ups in a way that not every unit has to worry
   about.

*) That being the case, maybe every (or most) units should deal some
   'elemental' damage, but it only has a negative (or positive) impact on
   certain, special units.

As I say it out loud, we run into a dilemma. I kinda like the idea we've described above, but the issue arises that if you KNOW what kinds of units you're going to be facing in an upcoming challenge, you could hypothetically rig your team such that you're taking advantage of the match-ups in a way that might be overly-simplified (our team will take less damage, now, or do more damage).

I feel like it makes the most sense when you don't know what's coming. Then, you're sort of taking a risk by bringing a certain unit onto your party. That's what I like about it. If you know what units are coming (which is very likely, unless every fight's units are 100% randomized), then you can start abusing the system to give yourself an advantage that isn't all that interesting.

What Panders is saying is that every dungeon could have a wide variety of elemental units. That way, you're not just saying, "Oh, I'm going into the volcano. I better not bring any ice types, because everything there is a fire-type."

I honestly think it would be more interesting if things like 'elemental weakness' and 'elemental strength', or 'elemental defense' and 'elemental attack' were attached directly to the UNIT, for all attacks they do and all damage they take. I don't think I want to fuck around too much with 'elements' on the scale of individual abilities. I don't think I want for there to be a 'black mage' class that has access to all of the elements. I think it makes for more interesting decisions -- greater consequences -- if the unit, itself, always attacks with some element and they're always weak (or strong) to some other element.

On that note, maybe the 'equipment' that a unit is permanently bound to might impact their elemental standing, in rare cases. We talked before about how every unit will have some 'perk' or 'passive'. Maybe that's where elemental stuff goes? Or maybe not; it could just be a generic attribute that all units share, but it's much less significant for most units.

Let's go back to attributes:
    *) HP
    *) OFF, which is just 'attack power.' Do we really need a different stat
       for 'physical attack' and 'magic attack'? Because, in JRPGs, how
       often does one unit take interesting advantage of both 'physical' and
       'magic' attack? Maybe we just need one 'offense' stat and their
       classes will determine what kind of attack that is. I don't think we
       really need to differentiate between 'magic' attacks and 'physical'
       attacks, right?

Panders brings up the point that, when you have two different attack stats (physical and magic), you can also have two different DEFENSE stats (physical and magic). So, a character that's got a lot of physical defense might be weak to an opponent who has a lot of magical attack. But this ties right back into what we were just saying about 'rock paper scissors' and whether or not that makes the game more interesting or less interesting.

We gotta bring in 'MP,' because I think that's an interesting way for some attacks to have a cost. We talked, above, about how, in our game, abilities could have a TON of different costs. They could have a limited number of uses per encounter or per turn, they might draw from the unit's HP or give the entire TEAM some status ailment. There's all kinds of costs for using abilities. By implementing 'MP,' I think we can strike a cool balance, because these attacks might have unlimited usages 'per encounter' or 'per turn,' but, by requiring MP to use, that will limit what OTHER abilities you use on your NEXT turn.

In Pokemon, every ability can only be used so many times before the Pokemon rests. This is also the behavior in most Dark Souls games and many classic pen-and-paper RPGs: you can only use EACH ability so many times.

What's cool about MP is that you can use any INDIVIDUAL ability however you want, but it will have a cost in the TOTAL NUMBER OF ABILITIES that you use before resting. You don't have 10 uses of 'Heal' and 10 uses of 'Thunder'. You have to choose between Heal and Thunder because of your MP limit.

So, it's a different kind of cost. It's a cost that's balanced against all of your other skills. I like that as an option for how to give certain abilities a cost.

Panders brings up the idea that maybe units can have a limit to how many actions they can take per turn. So, a unit with higher 'agility' might have a tactical advantage over a unit with lower agility because the unit with higher agility can take more actions before having to be tagged out (or before the end of the turn).

On the surface, I can see how that could lead to some interesting decisions. On the other hand, I also feel like, over-all, it probably lowers the amount of interesting decisions, and here's how:

It makes the most sense to me to balance "how many actions a single unit does per turn" with the fact that you WANT to tag another character in because of what we hope will be some tense tactical complexity in the game. In fact, we're even implementing a strict AP cost for tagging another unit in, because players are gonna WANT to tag in more units so they can use a wider variety of class abilities in a single turn, or make sure that a character with high DEF/HP is in the ring at the end of the turn.

Really, I've been look the idea of a single unit doing several actions in one turn as being a compromise. I feel like, in most cases, you're not going to want to have a single unit take more than one action, and if that's what they're doing, it's because you're trying to burn AP since you can't afford to swap in another character or you can't afford to swap a character in that would be safe if they were left in the ring for the next opponent turn. That being the case, I think a major part of the strategy of the game would be knowing which of your units has the most potential for taking multiple actions per turn. Like, you might want to swap in Unit A because they have a really cool ability you want to use, but you know that you'd need to swap in Unit B before the end of the turn, which means that you'd be wasting a lot of AP with swapping. So, you make the tough decision to swap in Unit C, who might not be quite AS useful, but he can do a variety of things: he's a jack of all trades and a master of none. It's a compromise to swap in Unit C, but it can do several things in one turn.

If a Leader character could only use a certain number of unit abilities per turn, it would encourage them to use bigger, more AP-intensive abilities. It would limit their tactical flexibility (which I think of as a good thing, in many cases), which could be cool. Maybe, instead of this being a trait of a Leader character, maybe it's a status ailment. Maybe a leader can be inflicted with an ailment that only allows them to use two unit abilities per turn, so now they have to make the difficult decision of which two to use to get the maximum effectiveness and consume as much AP as you can with only two abilities.

We've got these attributes for our units, basically:
    HP
    DEF
    OFF
    MP
    LP (Life Points)

    ATTACK ELEMENT
    ELEMENTAL STRENGTHS AND WEAKNESSES
    PERK
    Primary, Second, and Tertiary classes
    Once piece of permanent equipment which affects their growth, their
    tertiary class, their elements -- whatever.

'LP' is an attribute that is reduced by '1' every time your unit's HP hits zero, and certain rare, high-cost abilities can also reduce it directly. When a unit's LP reaches zero, it can't be revived, any more. We've previously talked about 'durability' in our game, and the possibility that units may die on a semi-permanent basis. Maybe 'LP' is how that works -- or, it could just be automatically restored at the end of every fight, and it only prevents a unit from being revived during THAT fight. But I kinda like the former idea: it's how they get 'destroyed' and then you need to painstakingly buy them back and replace them on your team for a while.




02/13/19

Let's review the attributes that our units have (and maybe the ones that our 'leaders' have as well):

Units:
    HP - The maximum amount of damage the unit can take before falling.
    DEF - A pseudo-linear reduction of damage that encourages the opponent
          to use higher-damage attacks over lower-damage ones.
    ATK - A multiplier for the damage of damaging abilities.
    SP - The unit's universal ammo count.
    LP - The number of times a unit can fall before being destroyed.
    DYNAMIC - A quality of the unit that will affect how they're played
              outside of the normal rules of battle.
    Status Effects - Additional rules applied to the character on a per-
                     battle or per-turn basis.
    Primary Class - The abilities pool that the unit has unrestricted
                    access to and which has the biggest impact on their role
                    in battle.
    Secondary Class - An abilities pool from which the unit can access all
                      but the most powerful abilities. Adds utility to the
                      character outside of a rigid role.
    Tertiary Class - A very limited abilities pool from which the unit can
                     only access the most trivial abilities. Maybe useful in
                     the clutch. Provided by the unit's equipment.
    Equipment - Affects the unit's growth and tertiary class. May also
                provide an additional Dynamic. Permanently bound to unit.

We can't really get a vision of how any unit will behave in battle until we start thinking about the 'classes,' which are just the ability pools. That being said, do we need any other attributes for individual characters.

I feel like the numerical attributes (HP, ATK, SP, LP) are pretty simple. Overly simple? I think that the real interesting differences between units will come from their 3 classes and their dynamics. HP affects 'tankiness'. ATK is an attribute that will affect your likeliness to want to attack with them. That sounds obvious, but it's kind of interesting because characters like healers, status-afflicters, buff'ers, don't really need ATK. They're not really going to ever attack the enemy directly. They would need SP instead of ATK.

When you see a unit that has high SP, you should expect them to be able to use more expensive abilities, which could have a big function in combat outside of doing direct HP damage -- or they could do exceptional HP damage. A unit with high SP is a unit to be especially wary of, and it might be a good idea to target them with abilities that reduce their MP to limit what they're capable of.

If a character has high LP, they're more reliable in combat. You don't need to dance around keeping them on their feet as desperately. On the other hand, characters with low LP might be very powerful but they're very fragile.

I was thinking last night that rather than having units have an elemental attack attribute and an elemental weakness attribute, maybe every unit should just have a single elemental 'type'. Some units would take more damage FROM these types. Others would deal more damage TO these types. Some might take LESS damage from these types, or MORE damage from these types -- but it wouldn't be about 'type' matchup. It'd be due to a Dynamic or a status effect.

In other words, it wouldn't be that 'Fire' units are always strong against 'Ice' units. It's more like, THIS PARTICULAR UNIT deals more damage to Fire units. The unit's 'types' don't directly interact at all. It's just a quality of Dynamics and status effects. The only reason that each unit would have a 'type' would be so that these Dynamics could effect them differently.

I don't think that I personally want to fuck around with accuracy. I don't know for sure if I've ever played a game -- and I've played a lot of JRPGs -- where I've really enjoyed having an evasion mechanic. Typically, units will have some kind of 'dodgeability' attribute and some kind of 'accuracy' attribute, and, when dealing a direct attack, these attributes will be compared between the attacker and the defender and that will calculate the percentage chance of the attack completely missing.

I just can't imagine a situation where that sort of dice-roll could have a strictly positive impact on the depth fo strategy. On the one hand, it adds risk and it incentivizes the player to minimize risk in intesive situations by relying on higher-accuracy units / abilities, and it also adds an element of dynamism where you plan has to change based on whether or not a previous ability connected. But I also feel like it can make certain units over-powered (if they have high evasion attribute) and, in a game where every turn is going to matter so much, and units can die semi-permanently, it seems like it could make low-accuracy abilities or units much, much less feasible in combat. I feel like the risk might be too high. I wonder if it woiuld make more sense to just have every ability be assumed to connect, unless the unit is under the effect of some Status Ailment (which can be stacked) which would reduce their likelihood of hitting.

From what I understand, there are guys out there that will look at a move in a JRPG that says, "20% chance to hit for triple damage," and that's attractive to them. Every JRPG I've played has abilities like this. I've never used them. I can't stand them. I don't see the point to them. Because you're gonna win the encounter if you stay solid and play smart. Why take such a big risk just to end it a little bit sooner?

Some people like gambling. I don't like gambling. I like certainty -- but gambling adds a thrill, it adds risk. To some people, that's exciting. I find it annoying.

I still feel like having 'accuracy' be a core part of the game (a stat of every unit, along with 'evasion') isn't something I want to do. I'm not opposed (and may be in favor of) having accuracy or evasion-affecting status effects, and I can also concede that it may add tactical interest to the game for select abilities to come packaged with a chance to miss.

HereGoes brings up the point that, sometimes, chance-to-miss attacks in JRPGs make for great hail-marys. What I find interesting about that statement is that he mentions that these attacks may be 'insta-kills'. It makes me think that, because of what I said about the importance of 'staying solid' and having a 'RELIABLE stategy,' moves that have a high chance to miss really should have KILLER benefits if they succeed. I feel like maybe a part of the reason that I've never really been attracted to these 'high chance to miss' moves in JRPGs is that the trade-off just isn't worth the risk. You might get a 'crit', which is bullshit. I can't risk my entire strategy just to get a crit.

On the other hand, if the reward was sufficiently high, maybe I could see how you COULD put your entire strategy into jeopardy and risk having to recover after a failure. Let's keep that in mind as we design classes and abilities; it might be cool to have some abilities that have a high chance to miss but are very, very rewarding if they succeed. That's an incentive to 'gamble' that I can understand.

We're continuing to look at what numerical attributes our units need to make combat more interesting.

Here's what I was thinking while talking to Kenny last about how battle would play out: in a game that's going in the direction that ours is, units are so much more than their numerical attributes. In fact, the more I think about it, the more they're like cards in a collectible card game. Here's why I say that:

The way that you play a unit and play AGAINST a unit is based heavily on their Dynamic and their classes. So, when you're facing an opponent, you basically want to read their 'description', and that affects how you play against them -- sort of like the text on a card. Every unit has its own rule (Dynamic) which you basically need to know when going up against them. Kinda reminds of a collectible card game.

DEF usually is a multipler that reduces HP damage. But, again, how is that really different from having more HP? Any time that a unit gets more DEF, couldn't you have just given them more HP and still have the same effect?

Panders mentions that 'defense' could affect low-damage attacks and high-damage differently. Perhaps your attack has to exceed some amount of damage before it can 'crack' the enemy's defense.

Is that kind of overpowered? On the discussion of having to 'crack' the enemy's defense, Panders puts forward an equation where defense reduces the amount of damage done in a linear fashion, which rewards higher-damage attacks over lower-damage attacks. This could positively impact the strategies that your opponent comes up with, because if they have a few remaining AP to consume on their turn, using a low-damage attack becomes less attractive. They want to deal damage in big, lump hits. This isn't a concern you would have against an opponent that has low defense.

Let's talk for a second about 'growth' and what I believe are the trappings of it. This being true of any JRPG, but especially of monster-collection JRPGs.

I've been thinking about the benefits and the disadvantages of having a traditional 'level-up' system, where each unit gains EXP at the end of battle and then, after acruing so much, they 'level up' and their attributes increase.

To me, the major disadvantage of going this route -- well, there's two:
    1.) It rewards the player directly for sticking with the same team. In
        a game where you've got potentially more than a hundred types of
        units to choose from, and where you want to reward the player for
        trying different strategies and re-configuring their team based on
        the challenges they expect to face in the near future, I think that
        you want to avoid situations where the player is saying to them-
        selves, "I could try this other unit, but they're under-leveled, and
        so I would need to grind in order to bring them into my party."

    2.) It rewards the player for grinding and overpowering their opponent
        with numerical superiority. We want for our players to succeed based
        on how well they can apply a strategy and build a team that has good
        synergy. If you reward the player for grinding, you're basically
        rewarding them for sacrificing their TIME rather than having to
        develop a strong strategy.

That's to say that I'm entirely against character growth. But I think that maybe we should come up with a way that allows for the leader and their units to get stronger (and have more complex strategies available to them, or open up new areas to them where the opponents were previously too powerful) in such a way that they all level-up UNIFORMLY. There's an EXP 'pool' that all units share under one leader, or something, so that you can bring any unit onto your team for the first time and they're up to speed.

The player should be rewarded for completing battles with some kind of character growth. I love the idea that, after an encounter, the player is given new possibilites for managing their team -- that's what character growth is all about, to me. Character growth gives you some creative power over your team; you've earned some currency, and now you can spend that currency to give you more tactical options. Make you feel more confident in dealing with future scenarios.

On the other hand, the downside of this very same property is that it can trivialize future encounters if you do it too much (grinding). And like we said, it can disadvantage new additions to the team, which discourages the player from swapping out units -- and that's the last thing I want to do. I want to encourage the player to swap out units as much we can.

So, at some point, we're going to need to think of a way to 'grow' characters or teams in such a way that new units can be 'brought up to speed' very quickly.

*) GoodVibe mentions the GENERAL GAME DESIGN CONCEPT of exhaustion, and that's something that I like, too, because it adds more depth and dynamism to the strategy. It means that your first encounter on an adventure will have different rules, effectively, than your tenth encounter. I like the idea that you have to pace yourself or risk burning out, and I like that, as you get burned out, encounters that might've been easy at first are now major threats. In our design so far, we've looked at that 'exhaustion' as something that occurs over the course of a single battle.

In fact, I've considered that, since we want for each fight to be at such a high difficulty, it would probably make sense to have the units' HP, etc., be restored completely between fights. That way, we can balance each encounter so that the player is encouraged to totally blow their load. Sacrifice HP, sacrifice SP -- and, ideally, they would NEED to do that in order to win. I feel like that could greatly enhance the stress-levels (in a good way) per fight, versus most JRPGs where because you have to fight SO many monsters as you explore, each individual encounter can't be TOO intensive. What ends up happening is that the game becomes pretty easy.

If we can balance our combat so that it's super-intense, I feel like that implies having to make major sacrifices in each fight, which means that it would probably make sense to refresh the team after each encounter.

GoodVibe's got me thinking: maybe the leader / team could have a simple 'exhaustion' attribute which goes up after encounter and debuffs the team slightly over time, even if their numerical attributes do get refreshed.

*) Zanzhu brings up the idea that, aside from rewarding units for appearing in combat by giving them EXP (and, by extension, level-ups), EXP can also be put into a 'pool' that can be selected expended to any unit that the leader might have access to.

One risk of this, right away, is that the player might be inclined to spend that EXP on the units that were just in the battle. One way to avoid this would be to have level-ups require exponentially more EXP. That way, spending it on a high-level unit would yield much less reward than spending it on a low-level unit. Lower-level units grow a LOT more per-EXP than high-level ones.

I feel like we made a lot of progress with our design, tonight. Next time (Monday) I would like to start talking about classes. What sorts of abstract 'roles' might our units need to fill on our team? What sorts of abilities would make sense within those roles?

Very importantly, how many units do we want on a single team? We want for each team to have strengths and weaknesses, tactically. We want for the player to have to sacrifice some options in order to open up other options. If each unit has access to 3 classes, how many units do we need for the player to have enough options to deal with a variety of enemy teams without giving them SO many options that they can deal with ANY enemy team.

We want the player to ALWAYS WISH they had access to ONE more class or ONE more unit. We want them to make difficult decisions about who is included in their team. How many units do we need to have on each time to succeed in that? It's a dance to control how often the player needs to switch units, and how flexible we want for individual teams to be so that they don't run the risk of entering a fight where they basically have NO chance of winning because they came in with the wrong team. Each time needs to be SOMEWHAT flexible but also restricted enough that the player has to make regular and difficult decisions about who to include on their team.

Before I forget, this is an idea that I've been playing with and we can discuss more in the future; I just want to write it down before I forget:

What if. Instead of having a traditional JRPG "team" that can only be changed at a save-point. Every encounter started with a draft. (This was inspired by last night's 3S Team Battle).

What if one of the two teams in battle (player or opponent) could get 'initiative,' and that meant that the opponent had to pick a unit from their collection and show it to the player. Then, the player could pick a unit from THEIR collection to counter that unit.

And then the opponent would pick ANOTHER unit to counter THAT unit. That way, I feel like you could encourage the player to familiarize themselves with a wide variety of strategies and units, and change their team on a per-battle basis with some foresight into what strategies the opponent has available to them. Before battle, you would be able to see what your opponent's team and they would be able to see what YOUR team is. I kinda think that's a cool idea, and it adds an element of strategy and gameplay before the battle even starts.

There would be UI difficulties, and you'd need to be able to sort your collection of units so that your favorites are on top, or something, depending on how many units you have. It could end up being a lot of scrolling. But I think it's a cool way to encourage the player to not get too attached to a single team and encourage them to pick the right tools for the job before each job.

*) Cajun mentions that individual units could have an 'exhaustion' attribute which would also encourage the player to try different units. Worth thinking about.

Panders brings up the idea, half-jokingly, that teams could be constructed at random. I was talking with Kenny, last night, about how forcing the player to re-evaluate their plan and come up with something on the fly is a virtue of game design, I feel like. Maybe there's some kind of status ailment or something that causes the opponent's team (or the player's team) to have one character slot filled by a random unit from their collection.

What if, before battle, the player could only pick from a pool of units from their collection that is, itself, randomized. You'd basically draw 20 cards from a deck, and be able to bring 4 of those cards into your hand.

When considering the way that units (monsters) will level-up, perhaps they gradually unlock their second and tertiary classes, or they unlock their dynamics, or they maybe even unlock secondary equipment slots -- or something like that. Maybe the level-ups aren't strictly about raising stats or learning new "abilities" from their classes.

I think that the average amount of AP that a leader should get per turn is 10 AP. That's what they start their turn with.

This way:
    *) The weakest abilities in the game can cost 1 AP.
    *) Character tagging (which is super significant to tactics) can cost
       3 AP.
    *) This way, you can basically tag twice per turn, but, by doing so,
       you limit the amount of actions you can do to consuming 4AP, which
       could be one kind of powerful ability or a couple middling abilities.
    *) This would prevent the player from being able to swap a tank OUT, use
       some abilities, and then swap the tank back IN before the end of the
       turn. With 10 AP to work in this set-up, that would be doable and
       even very tactical for some teams, but it would limit the amount of
       offense your team would have.

Even if only a little bit, I like gnomedjunior's idea that the leader could gain AP as they level up. Because of the way the game is engineered, it couldn't be by MUCH, but I do like the idea of opening up more tactical possibilities to the player as the game goes on.

For 'offensive' classes, they have a ratio of 3:1 attack to 'utility' skills. 'Standard' classes can be about even, and 'utility' classes can be mostly utility skills with a few offensive skills.

What Panders is saying is that, if you group attack abilities into a range of damage-to-cost, you can give 'attack centric' classes a bigger variety of tactical options when it comes to dealing damage at a variety of costs. On the other hand, classes which are more 'limited' in terms of attack potential may be able to do a LOT of damage per turn, but they won't have as many OPTIONS for damage-to-cost. So, some non-attack classes may ONLY have low-cost, low-damage attack abilities. Other non-attack classes may have only a couple HIGH cost HIGH damage abilities -- but, in any case, only the 'offense' classes will have the widest variety of cost and damage breadth. That way, the 'offensive' classes can effectively do damage in a wider variety of scenarios.

gnomedjunior is joining us for the first time, today, and doesn't really have a great grasp of how our combat is going to play out, but I do like his ideas for broad roles in combat, including "scout," "utility", "tank", "stealth".

gnomedjunior brings up the idea of some powerful attacks maybe even draining the MP of multiple units.

gnomedjunior brings up the idea for a 'dynamic' where maybe a certain unit (or even a unit under a certain status effect) will gain power based on how much damage they take.

Let me talk about 'status changes' for a moment:

In traditional JRPGs, status changes are relatively straight-forward, and by that I mean:
    *) They'll either last for a certain number of turns (maybe with some
       randomness).
    *) Or they'll be removed directly by either 'curing' a negative status
       change or 'dispeling' a positive one.
    *) Maybe certain items or abilities can cure PARTICULAR status changes,
       or you'll have an item or ability that cures ALL status changes.

That's how it works in a typical JRPG.

I was thinking, what if status changes have special requirements to cure them, rather than just 'casting the ability that cures it' or 'using the item that cures it' or 'waiting some number of turns'.

What if some status changes will only wear off after a the character takes a certain amount of damage, or inflicts a certain amount of damage, or consumes a certain amount of MP, or AP. What if a status change only wears off after the unit has been tagged in or out a certain number of times. I think that could be more interesting and have a greater impact on your tactics.

And maybe instead of having every 'curative' ability directly remove the status change, what if some just 'lessen the condition.' Maybe you're poisoned, and you're gonna stay poisoned until you tag out three times. Maybe a healer could have an ability that would lower that 'curative requirement' down to only needing to be swapped once.

I think we don't really need status changes that persist outside of combat. We've already got the 'exhaustion' system for adding some stress to the player between encounters.

My idea was not that certain status ailments like 'poison' would always require the same condition to cure it, but rather that certain abilities might inflict poison DIFFERENTLY. Certain abilities might inflict a poison that wears off after a certain number of turns, while others might inflict the same 'ailment' but with a different condition for curing it. Maybe some abilities might inflict a status ailment with a somewhat randomized condition for curing that ailment.

On the subject of ailments, Panders mentions an idea where the afflicted unit could only use even or odd AP costing abilities.

GnomedJunior brings up the awesome idea of a ailment or ability that would neutralize a unit or leader's 'dynamic'.

LasteveqA_ brings up an idea that I'd considered but hadn't remembered to write down until now: what if some status ailments were like 'threats'. That is to say, they don't trigger right away but have a condition that must be met for them to take affect.

GnomedJunior brings up the idea of abilities that only trigger when the unit that used them is attacked (counter abilities). These would make sense for 'tanky' classes.

GnomedJunior also mentions the idea of 'traps'. We touched on this with LasteveqA_'s idea of 'threat' status changes, but what if we had certain abilities that would add new 'dynamics' or 'rules' to the entire battlefield. We haven't considered that before.

Up to this point, we've given dynamics (special rules) to units and leaders, and we have status changes that can apply special rules, but what if there was a slot for a dynamic that applied to the entire battle rather than just individual units or leaders. What if you could use a skill that would cause any unit that attacks with MP to take damage. I guess maybe we don't need that, since you could also look at it as just adding that dynamic to both teams.

It would be more clear if, rather than giving both leaders the same 'status change,' there was a slot for rules that affects the entire battlefield. Let's lock that in.

Status changes can be inflicted on UNITS and will affect that unit individually.
Status changes can be inflicted on the LEADER, which will affect the entire team.
Status changes can be inflicted on the BATTLEFIELD, which will affect both teams equally.

Maybe certain dungeons or areas or parts of the game carry special rules on the battlefield.

gnomedjunior brings up the idea that having various rules apply to the battlefield might encourage different strategies or empower certain classes. We're always looking for ways to encourage the player to switch up their team and exploit different strategies.

It'd be cool if certain rules on the battlefield could trigger other rules. LasteveqA_ mentions that rules could 'level up,' and I'm choosing to interpret that as, maybe, after a certain amount of time, a rule becomes more severe -- or, when triggered, the rule might become more severe.



02/20/19

We're gonna have a mock battle, today, which means that we all have to close our eyes and imagine that we're having a real encounter with another real player.

Battle starts by rolling for initiative. We're gonna have two teams with two leaders: Team A, and Team B.

Team A gets initiative, so Team B needs to pick a unit from their deck.

As long as we're imagining an encounter, why don't we imagine what sorts of decisions might go into designing a 10-unit deck.

So now I'm the leader of Team B and I need to pick a unit from my deck without having any idea of what sorts of units my opponent has access to.

What's in my deck?

We have to consider exhaustion, which means that we might want to bring in multiples of the same or similar units just to make sure that no individual one gets too tired.

We need atk damage to defeat our opponents.
But battle could be over quickly if we can't cure status changes.
We could end battle quickly if we can afflict status changes effectively.
We could pick units whose Unit Dynamics complement each other.

One thing I know we're gonna need is a way to deal damage. We should probably pick a unit that can not only deal damage but also has a complimentary Unit Dynamic with our other units. After all, lots of units and classes can deal damage, so if we're going to put ONE of them in our deck, perhaps the Unit Dynamic would be a hugely influential factor.

What are THE MOST IMPORTANT roles to have filled in a battle? Again, we can't see what units our opponent has in their deck. We were unlucky enough to have to blind-pick our first unit, so it has to be something that we KNOW we're likely to need.

You guys know me: I like defense. The way I see it, the longer we can draw out battle, the more likely I am to win because I can get a feel for my opponent and gradually build up my advantage.

I want to bring in a unit that has high HP and high DEF, and their abilities might revolve around healing themselves, or temporarily boosting their defense (or the defense of the party). A tank would be stuck in the 'ring' more often than other characters -- but he wouldn't take actions. We talked before about how, if you end the turn on a tank you have to swap them out for a more aggressive unit at the start of the next turn and then swap the aggressive unit back out for the tank by the end of the turn, which wastes a lot of AP. So, there would be two kinds of tanks, then:

SUPER effective tanks whose abilities you would RARELY use (because you'd be swapping them in and out, so much).

Tanks which have to have decent, flexible abilities, because you DON'T want to swap them that much, but you still want for them to be able to absord the enemy's aggression.

A tank isn't really a tank if the other party members can't act. The idea of a 'tank' with decent abilities so that you can leave them in the ring for longer (and not waste AP with tagging) is kind of silly, because if they don't tag in and out, none of the other units on the team can act.

Maybe a game with this design wouldn't benefit as much from 'traditional' tanks. It would probably make more sense to think of the 'defensive' unit on the party as being the one that raises the defense of other party members. These buffs could target the ally party in a variety of interesting ways: they could affect the next unit to swap in, or the whole team, or there could be a status change or dynamic that boosts some kind of defense somewhere on the party whenever the 'tank' is swapped in.

Maybe I don't want my first unit to be a traditional, high-HP / DEF TANK, but rather a 'caster' that can make my team more defensive. Maybe it's important to my defensive, slow-paced strategy to bring in a character that can give my team buffs to make them more durable.

One of my four units is gonna be the guy that makes my team more durable.
This unit also has a secondary class. And a Unit Dynamic. What would be a good secondary class for a unit that makes the team more durable.

Well, he's probably going to be using his Primary Class every chance he gets -- which is the idea of a 'primary class' and that's why 'secondary classes' and 'tertiary classes' are more situational.

We gotta ask ourselves: do we feel lucky? Well, do we? Punk? We gotta ask ourselves when will our unit make use of their secondary class.

What jumps out at me is that, if our "defense buff'er" is consuming MP for all of their abilities, maybe we should consider a secondary class that doesn't consume MP -- that way, if they're stuck in the ring or if they run out of MP they're not totally useless.

Even within the role of 'defense buff-er', there's a variety of ways they could play. My idea was to have a caster, who probably has low HP and low ATK, get swapped in, cast a buff that lasts a couple turns, and then get swapped out.

But Faust brings up the idea of a 'defense buff-er' who, himself, is somewhat tanky, and then he could get swapped in, cast a buff, and then close out the turn -- absorb damage on the enemy turn, and then tag out for a FRESHLY BUFFED ally unit.

In the latter case, the unit would likely suffer some shortcoming regarding the effectiveness of his buffs -- either because he has low MP (can't cast that many) or his class doesn't have as good of buffing abilities (maybe a 'tanky', high HP & DEF unit should only have defense-buffing as their secondary or tertiary classes), or maybe we need another Attribute for our units that determines their effectiveness with inflicting status changes. Units that have a higher 'status change inflicting' stat would cast more effective status changes that may last longer, etc. But that's kind of complex and I think, now that I've said it out loud, we have the solution to this problem by limiting high-HP/DEF characters by putting buffs and casting, etc., only into their secondary or tertiary class slots.

*) A Dynamic that makes a unit more powerful every turn that they aren't killed, or they don't take damage, or something along those lines.

If I'm picking a unit for my team, without knowing what my opponent is picking, I think I want a unit that can buff my team's defense but which has low HP and DEF, itself. You swap it in, it casts a buff, and you swap it out before the end of the turn. That turn is partially wasted by all of the AP spent swapping the unit in and out, but now our team is more durable for some amount of time until I have to waste another turn doing the same thing.

So basically, we're designing a class whose purpose it is to get swapped INTO battle, cast a spell that raises defense or makes the party more durable, and then gets swapped OUT of battle.

That unit's primary class is one that has Abilities like this:
    *) It's got something that can apply a relatively significant defensive
       boost to the whole team for some small amount of time. Some large
       cost. Tier 3.
    *) It's got something that can apply a significant defensive boost to a
       single ally unit (who will likely be swapped in next turn). Some
       significant cost. Tier 2.
    *) For some small cost, he can raise resistance to a certain unit type?
       Minor cost? Tier 1?
    *) As a Tier 2 ability, maybe he can impart his own defense to another
       unit maybe even until the end of battle. It won't be as temporary,
       but it will make this unit much more frail.
    *) I want an ability that can make a unit INVINCIBLE to ONE attack
       (keeping in mind that the opponent can attack more than once per
       round). Considering that the opponent would KNOW that their next
       attack will be absorbed and that the FOLLOWING attack will NOT be
       absorbed, I don't know how powerful this ability would be. It would
       work well against units who ONLY have high-cost, high-damage attacks,
       so, if that enemy unit were in the ring at the time, they would
       either need to waste some large cost or be swapped out. Even if the
       opponent COULD use a low-damage, low-cost attack to get rid of this
       shield, it would cost them AP. Tier 2.
    *) I want an ability that makes the ENTIRE PARTY INVINCIBLE for one
       turn. This would be a PRETTY DAMN HIGH COST, and it would force the
       opponent to use their turn in ways aside from dealing direct HP
       damage, such as afflicting my team with negative status changes or
       buffing their team with positive status changes, or healing their
       team, or setting up traps, etc. Tier 3. It only lasts one turn.
    *) How about an ability that makes the each party member, individually,
       invincible to the next attack they take. It's the same as the ability
       two abilities up from here, but instantly hits every party member.
       That would be a very large cost. Tier 3.
    *) How about an ability that gives a single party member a 'reflect'
       status change, which will deal any damage given to them back to the
       opponent, but which also prevents any other positive abilities from
       working on them. In fact, if an ally unit were to then 'buff the
       whole team,' the 'reflecting' unit's buff would be sent to one of the
       opponent units. On the other hand, this also means that, aside from
       being invincible to damage, they're also invincible to negative
       status changes, which is pretty powerful -- maybe too powerful. This
       'reflecting' unit can't be attacked, it can't be healed, it can't be
       buffed, and it can't be nerfed until 'reflect' wears off. We'll sleep
       on this. Cool idea, but maybe way too strong.

Let's get an over-all look at what this class is like so far:
    *) It has abilities for buffing the defense of the entire team and
       individual units.
    *) It has an ability for sacrificing its own defense to raise the
       defense of another unit.
    *) It has abilities that give a single unit or the entire party the
       ability to completely absord the HP damage of the next attack they
       take.
    *) It has abilities that makes the entire party or individual units
       completely invincible for one turn.
    *) It has an ability (maybe) that will raise a unit or the party's
       resistance to attacks from enemy units of a certain type.

What else do we need, if anything, for a class whose job it is to make the ally team more durable (to HP damage).

Reflecting damage wouldn't work in this game, because the opponent can SEE that you have a 'reflect' status change. They're not gonna attack you. Unless the opponent only has moves that can hit the whole party, in which case they would need to incidentally trigger somebody's 'reflect'. I just don't see that really happening.

nSpyer brings up the idea that 'reflect' isn't strictly a buff. It can also be considered a negative ailment, because you wouldn't be able to heal that unit or buff that unit. That's a really cool idea, but I'm not sure that it's for this class. Maybe it is. We'll consider that. What if a 'defense buffing class' DID have reflect, but it was at a relatively low cost. It would protect you from damage, sure, but it would also have a downside.

What if we had defensive 'shield types' that, when hit, would restore some currency to the team. That sounds kind of cool, but the downside is that if you have this status change, who would attack you? Nobody. What if it was only a minor thing? And if it lasted more than one turn? I think I like this idea, and I want to implement it. Is it for this class? I think maybe?

You could have a 'shield' that DOESN'T PREVENT ANY DAMAGE, but they give the team or a unit some kind of perk when that unit is struck. Maybe it's more for a 'trap' class? Is a 'trap-focused class' really a good tactical decision when you can only bring four units battle.

Goodvibe mentions that a 'defense-raising unit' could not only raise the DEF of its allies, but also maybe raise their chance to evade for some amount of time.

That's awesome, but it also gets me thinking that it could be spun off into its OWN class. Maybe that could be a theme as we design classes: some classes have a more gauranteed function in battle, and they could have a sister class which might be more BENEFICIAL but deals more with CHANCE.

nSpyer reminds us that some classes and abilities will be based around CONTROLLING the way that the opponents act. What I've considered is the past is an ability that will LOCK OUT a unit from being tagged in for a turn or more. nSpyer mentions that maybe units could be 'cursed' to only attack a certain unit.

But the problem with traditional 'aggro' draw, like you see in other party-based games, is that 99% of abilities will only target the opponent who's in the ring. You can't really implement 'aggro' when units outside of the ring can't be targetted directly for attacks. HOWEVER. As I say that out loud, maybe it means that any attack targeting the in-ring unit is redirected to an out-of-ring unit. You could have a tank that 'taunts' the enemy or the enemy-team and, when he's SWAPPED OUT, he's STILL the target for attacks.

We discussed this earlier as a sort of "tank jumps in and takes the bullet for the guy in the ring" ability. It's basically a 'substitution' ability. The unit IN THE RING is temporarily INVINCIBLE to damage, but, whenever they WOULD take damage, a unit from OUT OF THE RING essentially jumps in and takes the damage for them.

What's cool about this is that it could be a status change that only impacts ONE enemy unit. Like, maybe you afflict the most powerful enemy unit with a status change that makes it so that all of their attacks will only hit one specific member on your team. Or it could affect the enemy party.

We could have berzerk and all kinds of cool status change.

Ideas for other 'defensive' classes:
    *) A class that draws aggro to it.
    *) A class that gives the allies a PERCENTAGE CHANGE to neutralize
       damage.


02/21/19

Kenny raised the idea on Discord of two different classes, both of which I think are interesting and worth exploring:
    *) A direct-attacker class whose entire function (or a big part of its
       function) is to pierce through defense. Maybe its attacks will
       lower the defense of the target on top of doing damage.
    *) A class which 'steals' or otherwise transplants buffs and nerfs.
       What if a class could take the nerf OFF OF one of its allies and
       move it to one of the opponents, or take a buff OFF OF one of its
       opponents and move it to one of its allies. That's a cool idea.

Let's get back to picking our units for battle. I picked a unit whose primary role is to raise the defense of my team and otherwise prevent direct HP damage. It's probably going to have (relatively) low ATK, DEF, and HP, itself, but high MP. Considering these attributes, what's an interesting idea for a secondary class?

He's got low ATK, probably, so he's probably not going to be using his MP to attack the opponent -- and even if he had high MP, I'm not sure I'd want to have to choose between attacking and buffing. On the other hand, that's probably why it would be interesting.

We have four units on our team. So, I've got a lot of other roles that need to be filled on this team. Should he also be able to heal? He wouldn't have access to the Tier 3 healing abilities, which makes sense, because that's not his primary role. Any turn that he's healing, he essentially can't be buffing. Or he'll be stuck in the ring.

Keep in mind that we can have a variety of different 'healing' classes. Maybe healing as a tertiary class? Maybe some kind of negative status change class that could make the opponent even shittier at dealing damage to me? That has too much cross-over. Why would I pick one over the other?

Considering that this class is based around making my team survive LONGER, maybe it'd be fun to give this unit a secondary class which slowly erodes the enemy team over time. Some kind of status affliction or something that affects the enemy team over time. Or maybe just a class that buffs my units in terms of atk or something along those lines as a secondary (so they'd be lacking the Tier 3 abilities).

I think this unit's Tertiary Class should be HP healing, just to get that out of the way. It makes sense to me that a class with high MP and low ATK would be able to use some minor healing abilities.

With def buffing and healing, we are really fucked if this unit is the last one on our team that's still standing, because it can't do damage at all.

Why don't we go with some kind of gimmick where we're afflicting the enemy team with status changes that diminish them over time.

Let's design a class that afflicts the opponent with status changes that somehow diminish them over time:

Abilities for this 'poisoner' class:
    *) Tier 3 ability which afflicts the entire enemy team with a low-
       potency poison at a great cost.
    *) Tier 2 ability which afflicts one enemy on the opposing team with a
       mid-potency poison.
    *) Tier 3 abiilty which afflict a single enemy with a high-potency
       poison.

Austin brings up the idea of a poison which damages the enemy unit whenever they take an action.

Do we want this class to specialize in status-changes that directly, continuously reduce their HP under some condition, or do we want this class to specialize in status changes that weaken the enemy over TIME.

I'm gonna say this right out: I don't think that a class which can inflict POISON, to DIRECTLY LOWER THE ENEMY'S HP, is thematically compatible with abilities that weaken the opponent in OTHER WAYS. So we don't need a class which can 'poison' the opponent but also can, say, 'lower its atk over time.'

We don't need this class idea which generally 'fucks the opponent up over time.'

Poison is a tactically interesting status change when done right. What if this class could inflict a special kind of 'poison' which lasts until the poisoner takes damage. What if there were, like, 'antidote gimmicks,' where this unit or the ally team could come up with ways to tease the opponent with an antidote.

Austin brings up the idea that poison (and any other status change or dynamic) that's based around the enemy unit using an ability could have its effect scaled based on what tier ability they use.

Here's what I'm getting from the chat: the more I hear the more I not only LIKE Austin's idea of having an ability that deals damage based on the opponent's actions, but I actually DO think that, thematically, it belongs in this class. This class would be based around inflicting HP damage indirectly. Rather than directly attacking the opponent, it sets up conditions where the opponent will be taking damage and it puts the anus of preventing the damage on the opponent's ability to satisfy the conditions to cure the status change. So that means that we gotta think about how POWERFUL these 'poisons' are so that the opponent can realistically cure or otherwise work around them.

In a game like ours where status changes and 'dynamics' are SO powerful and SO integral to the second-to-second strategy, a status change like 'poison' which is 'okay' at best in most JRPGs could end up becoming way overpowered.

So, speaking of balancing 'poison' in a game as fixated on status changes as this one, IS IT TOO STRONG to have pretty much ANY poison strictly last a certain number of turns. Because in that case, the opponent would pretty much NEED to have some ability or item that could directly cure that poison. Other types of 'cure conditions,' such as 'deal damage to the opponent,' or, 'hit an ally,' or, 'inflict the opponent with a status change' -- basically ANY other cure-condition would probably be more feasible than a hard "survive 4 turns".

This makes me think about how status changes should be able to have MULTIPLE cure-conditions, right? Like, "deal 20 damage to the opposing team or survive 4 turns."

Depending on the severity of the poison, it could be very tough to deal with. We have to consider these sorts of things for all status changes. Not every 4-man-team is going to have a unit that can directly cure or otherwise reduce the severity of all status changes.

Kenny brings up the idea of a cure-condition (or other dynamics) which are based on rewarding the unit for not being used for some amount of turns. Maybe the poison is cured once that unit has gone 3 turns without being used.

I'm gonna go on a small tangent, since we're talking about inflicting negative status changes (ailments):

I'm really in love with the idea of having all of these special 'rules' have a tactical impact on battle.

I love the dynamics. I love the cure-conditions for status changes. I love that 'status changes,' themselves, could be dynamic based on all of these rules that could apply to them.

But here's what I've been thinking that's a challenge we're going to have to deal with, in terms of design: for any given status-change idea ("reduce HP over time"), there is literally an infinite number of rules we could use as a cure condition.

Imagine a status change that lowers your chance-to-hit by "20%". That's a real basic idea for a status change. But when you consider how many different conditions there could be to CURE it, or even how many "trap conditions" there could be to TRIGGER it, you're talking about literally an infinite number of 'abilities' you could create based around this status change.

I almost feel like we need some way to disassociate the 'status change' itself from the condition used to 'cure it' or 'trigger it', etc. But, from a UI standpoint and even from a game-design standpoint I'm not exactly sure how we'd accomplish this or if we'd really want to accomplish this.

Dixx makes the point that, as a way of balancing the status changes, we could have their severity be somewhat random, and, likewise, the 'cure condition' could be somewhat random. It reminded me of an idea I had to have a class which casts a variety of status changes but the cure conditions are always fully randomized.

Before we get too far, this is a problem with our design that I really want to address: how do we choose which status changes get paired up with which conditions considering that, with the way that our rule-system works, there's an endless number of conditions to choose from.

Let's be clear about some language:

When I say 'condition' I'm not talking about a 'status condition.' We're using the term 'status change' for those, right now. I'm talking about a 'cure condition' or a 'trap condition'. These are conditions that must be met before the status change goes away, or conditions that, when met, trigger the status change to activate.

In most JRPGs, you cure 'poison' by using an 'antidote item' or an 'anditote ability'. I think that's boring, and so, in our system, status changes can have a huge variety of conditions that a team can meet in order for that condition to go away. And instead of having a class that can directly cure any status change, it might have an ability that reduces the severity of the condition (so, instead of having to deal 200 damage to the enemy team to cure your blindness, you only have to deal 50 damage after receiving this 'cure' from a healer).

HereGoes brings up the idea of maybe having some kind of 'pair' or 'team' dynamic (maybe based around unit Types) that make certain interactions between them more beneficial.

We also have a problem of variety (too much?) when it comes to SEVERITY of status changes. Do we need a FLEXIBLE WAY for the PLAYER to choose the severity of the status change they're inflicting. Some status changes will stack, so you can make them more severe by inflicting them more than once. Even then, we could create SO many different abilities that inflict status changes DIRECTLY at a variety of severities.

Looking at 'blindness' again, you could have a Tier 1 ability that inflicts a -10% penalty to-hit. But you could also have a Tier 3 ability which inflicts a -40% (or higher) penalty to-hit.

How do you choose which combinations are the MOST interesting and how do you avoid creating too many combinations.

This is kind of a crazy idea, but I'm gonna throw it out there:
    What if the classes / abilities, themselves, were somewhat randomized. When you capture a unit, maybe its abilities can vary within a certain window a variance. Maybe you could have two of the same unit, essentially, but their respective 'tier 3 blinding' abilities for their primary class could have different severities and different cure-conditions.

    This would also solve a conceptual problem I've been having with whether or not it'd be interesting to allow the player to capture more than one of a single kind of unit. It adds a gatcha element.

    Whether or not the 'randomness within classes' idea is cool, it is a big leap for our game design and it should be taken very seriously. But I think it's a pretty sensible solution considering our unique problem: too many options for severity and condition, but all of those options are interesting. How do you choose which ones to use when they're all so interesting and could make combat so much deeper, having these varieties of conditions. I think that having an element of randomness, where you could have two of the same kind of unit but they're powerful in different situations, against different enemy parties, because the cure-conditions they have on their status changes is different.

    The only problem that I see with that is that we'd need to come up with a MECHANICAL way (because it's randomnized) to make sure that you don't get an overly-powerful pair of STATUS CHANGE and CURE-CONDITION.

    Up to this point, I've been looking at 'abilities' as being strictly defined. What I'm proposing now is that each 'ability', even if it's under the same NAME and has the same basic function, and always occupies the same place in the class -- I'm proposing that this ability is UNIQUE because it's randomized within a given, balanced window of variance.

    I'm gonna go even further: I like this idea EVEN IF we need to hard-code a variety of severities and conditions. Maybe not every status change will have access to every possible cure condition. Maybe they'll only have access to three or four variations that we would pick -- but the BENEFIT would be that a unit COULD have all of these cool options without us needing to literally create FOUR or more of essentially the same ability within the same class.

    Dixx is right, though. I do think that this is something that, with the right design philsophy, would be relatively trivial to implement. However, let it be stated that we are definitely adding complexity, here.

    Dixx brings up the idea that, for these sorts of 'random within a unit' variances, we could have it balanced in some way based on some attribute of the unit, if we wanted to. Basically, we could balance it so that a unit who rolls high ATTRIBUTES (HP, ATK, DEF) could be bent toward having weaker abilities. We could weight it that way.

    I think what Dixx is talking about is how to define randomness for the encounters? Maybe what Dixx is talking about is that not EVERY ability within a unit's class would have its abilities' severity and cure-condition individually randomized. Maybe we'd just create a few different 'sets' that a unit could end up with.

    What's cool about Dixx's idea is that you could essentially get two of
the same exact unit if it randomly rolled the same 'size,' 'gender,' or whatever we're using as a SEED to define its moves. What Dixx is talking about rolling for a SEED for each unit, and then using that seed to determine the 'variant' attributes of its abilities. You don't roll totally randomly for every ability. Rather, you roll for this seed and then use that seed to determine all of its abilities. That way, you could have two of the same unit if it had the same seed.

    The thing about this idea is that it doesn't really help us in terms of balancing these randomized classes. It's still totally random, because we're gonna be going through each possible seed to make sure that it's not too strong or too weak. It's kind of a cool idea because I am attracted to the notion that you could get two of the exact same unit based on this seed. That's kind of cool. On the other hand, when you're LIMITING the random possibilities, this way, I feel like you're risking DESIGNING a class, but then too many of the possible seeds make that class too strong or too weak. If every ability rolls individually, you have an infinite, essentially, number of combinations of EFFECTIVENESS.

    Before we end the stream, I want to clarify more about Dixx's idea for 'seeding' units to pre-determine their variant abilities. What he's talking about is having some abilities take their variance from a PARTICULAR seed, and others from a DIFFERENT seed, and maybe the unit's various seeds are even balanced against EACH OTHER. So maybe a unit can't have a really 'godlike seed' for all of its seeds. In his example, he mentioned that some abilities might be based on 'height,' and others might be based on 'weight', etc., etc., but if 'weight' makes certain abilities 'better' for that class, then it could haven't really high height AND weight. When we're creating the unit, we would balance those seeds against each other.

    That does make pretty good sense to me when we're talking about the SEVERITY of the status change and the SEVERITY of the condition. But ideally, I would like for the nature of the condition (based on a number of turns, or based on swapping the unit in and out of the ring, or based on dealing so much damage to the opposing team) to be more random, because I don't think that any of these are strictly BETTER than other conditions. They're just DIFFERENT and would play out differently in different scenarios, against different teams.

    But Dixx is right: when we're talking about SEVERITY of the status change, itself, and the SEVERITY of the condition (how MANY turns do you gotta wait), we are strictly talking about making that ability BETTER. So you could basically roll a WORSE version of that ability. And so maybe balancing that against some seeds which are balanced against EACH OTHER would be a way to prevent a unit from rolling as COMPLETELY TRASH or UNBELIEVABLY AMAZING.

    Let's also, before I end the stream, remember that our abilities also have 'costs' which could be somewhat random in their severity and their nature.

    Dixx also goes on to clarify that, MECHANICALLY SPEAKING, in our code for how we balance these abilities against the seeds, having a HIGH or GOOD seed could actually negatively impact other abilities, to some extent. That way, we're kind of ensuring that a unit would be really GOOD at some things and not as good at other things.

    It's a pretty complex mechanism that we're going to have to work out in more detail later, but I think that Dixx really hits it on the head when he conceptualized for us a way to randomize a unit's attributes but also keep them somewhat balanced. This is almost certainly a better way, though more complex, to go about randomizing within a class rather than just raw-randomizing every individual ability. Because, in that case, you would definitely end up with some units who roll HIGH in a LOT of abilities or super LOW in a lot of abilities. It would be really difficult if it were possible to balance a unit where every ability is randomized.

    I'm gonna go out on a limb and say that we came up with a lot of solutions, today, for some very abstract problems that we were destined to have. We didn't get as far as I hoped we would with our 'mock battle' as a way to design new classes, but with what we've determined today regarding how abilities can vary, it will be MUCH EASIER in the future to define classes. Because we won't need to over-fixate as much about the exact severity of each ability or its exact cost or cure-conditon or whatever.

    I'm gonna make note that what's also cool about this is that we can IMMEDIATELY WRITE-OFF a bunch of classes which our game wouldn't have necessarily benefited from.

    A class idea I had was a class that's entirely based around "weakening the opponent over time." "All of its abilities would lower some enemy attribute each turn." That COULD still be a thing, but it's not as important or interesting when you consider that, in GENERAL, status changes will have their cure-conditions randomized to an extent. To me, that's MORE interesting. I don't think you really want to base a class around the CURE-CONDITION for its status changes.



02/25/19

We just made a note about the possiblity of a healer class that can reduce the duration of 'negative status changes,' but that would imply that we always know which status changes are 'negative.' With how much our gameplay is based around synergy, what may seem like a nerf may end up being a buff. So maybe Kenny's idea makes more sense: look at status changes AGNOSTICALLY and maybe have one class that extends or shortens status change duration.

Or we could keep it simple and give 'healer' classes the ability to shorten durations of traditionally 'negative' status changes and leave it up to the player to exploit that in the case that this negative status change might somehow boost the party due to a Dynamic or something.

Maybe many classes have variants which are more POTENT but have a % chance to fail.

Because we haven't completed many (or any) mock battles yet, we haven't really nailed down just how specific these 'roles' are going to end up being. We've mused about this before, but let's be explicit:

*) Every unit is going to have the abilities of 3 different classes, so, even if each class is really, REALLY specific, the unit may end up being somewhat flexible.

*) We want to strictly control how flexible any unit is, tactically, to encourage the player to regularly use different team members.

*) Depending on how LONG we expect for combat to play out, each match may only comprise so many turns, in which case you could almost think of each class as being primarily a couple of abilities.

*) We have 4 units on the battlefield, and each one has 3 classes. I almost feel like each 'class' doesn't really need a lot of variance within it. Basically, you could almost think about each class as only doing '1 thing,' and the variety in its abilities is a few different ways to go about accomplishing that 1 thing.

*) The idea of a 'status affliction' class MIGHT NOT MAKE SENSE in the sense of giving it a huge variety of afflictions to cast on the opponent team. Within our model, it might make more sense to have a 'poisoner' class and a 'blind'er' class and a 'paralyzer' class. I don't think you really need a class that can inflict every kind of negative status change; you're probably only going to use one or two of them per battle. That's what I mean when I talk about, "how flexible do individual classes need to be".


To design a UNIT with 3 classes, you kind of have to think outside of the box, and I'm having difficulty with that. The benefit is that, when you're PLAYING the game, you don't have to do this part: the designing of the units. You're just GIVEN units and you have to choose from them. I think that'll be fun.

That being said, as we COME UP WITH UNITS, I'm finding it difficult, already, to marry classes together in interesting ways. I picked, for my first unit, a unit that can raise the defense of my team. What I'm struggling is what its secondary class should be? 

The problems I'm having are these:
    *) The secondary class can't synergize with the primary class in a way that makes this unit too strong.
    *) The secondary class's abilities won't be used on a turn where this unit is, instead, using its PRIMARY abilities. When are these gonna get used?
    *) These abilities have to compliment the statistical attributes of whatever unit we're using.
    *) If they compliment the attributes TOO much, why are we using these secondary abilities instead of our primary ones?
    *) The whole idea of the secondary class is to say, "This unit's PRIMARY ROLE in battle is effectively dictated by its PRIMARY CLASS. However, combat is dynamic -- the enemy might pull an UNEXPECTED STUNT -- and so this unit may need to take on a secondary role. So, they have these secondary abilities that give the unit a bit more leeway regarding their function in battle.
    *) Like, you're picking a 10-unit deck before you enter a dungeon. You know that, throughout the course of that dungeon, your units are going to become increasing Exhausted. Furthermore, some might fully consume their MP. Some might be removed from the deck by losing their LP. So, there's going to be times where you NEED to use your units' SECONDARY CLASSES as their PRIMARY ROLES.
    *) You have to make decisions about who you bring into combat based on not only who your OPPONENT is adding to their team, but also based on what units you have available to you. That means compromises, and compromises become more interesting when you consider that units have secondary and tertiary classes from which they can draw abilities.
    *) So, considering that we're limiting 'deck size' to 10, when considering designs for units, we don't REALLY need to consider that the PLAYER might want to use abilities from ALL of the unit's classes within a single battle. We could consider that the unit's 3 classes might make it a more flexible pick for what NARROW ROLE it might play in the immediate battle. A unit might not mix and match between its abilities in the course of a single battle, but it may be brought in at the start of a fight just to exploit its secondary class. In that case, it wouldn't have access to the TIER 3 abilities of that class, but, when the going gets tough, maybe the leader has to decide that it needs to exploit at least the Tier 2 abilities of that class -- and because that's the role it's filling in combat, there really isn't enough AP per turn for that same unit to exploit its PRIMARY class.

Because you only have 10 units to choose from for any given battle, and they're going to be Exhausted. Or maybe you want to have a GREATER COVERAGE of roles AVAILABLE to you at the start of a battle, so you can effectively have 20 different roles available to you if you consider that 10 of those roles are going to be lacking their Tier 3 abilities.

So maybe that's a healthy way to look at secondary classes: you might not ever use the Primary class and the Secondary class in the same fight, but it does give you some tactical flexibility regarding what role a single unit can fill when chosen to be a part of some battle's 4-man team.



Panders brings up the idea that certain classes may have different ability affects because they're dependent on attributes of the unit that the class belongs to. For instance, maybe some abilities afflict different status changes based on some attribute of the unit using the ability.

Panders brings up that there's a compromise to be made between choosing units for your deck that have BROAD ROLE COVERAGE and those which individually have good MULTI-CLASS SYNERGY. For long, highly tactical fights against bosses or whatever, it might make sense to pick 3 or 4 units whose abilities, across all of their classes, you intend to make use of. But for long dungeons with a lot of enemy variety, it would make sense to fill your deck with enough classes, be they primary or secondary, to cover a lot of different situations.

So this idea makes it a bit easier to come up with secondary classes for units, because, in many cases, it might be TRIVIAL what the combination of classes is. In my example, because I'm picking FIRST, I'm choosing this unit EXPLICITLY to exploit its primary class as a defense-buffer. That being said, I may never use its secondary class in this fight, and, as game designers, maybe we don't really need to THINK about how every fight will have a unit using abilities from all of its classes. Because I'm choosing unit EXPLICITLY to use its PRIMARY class, maybe it's not super important right now what its secondary class is. There will come ANOTHER TIME where I pick this same unit EXPLICITLY to exploit its secondary class, but that day isn't today.

My unit has low ATK and high MP. It has middling DEF. We'll give it a secondary class that isn't about dealing direct damage to the opponent.

How about we talk about an idea I've had for a class which PINS an enemy unit so that it CAN'T enter the ring for some amount of time.

Panders mentions that we could come up with a system for balancing unit growth when we're designing units. We could limit the number of 'points' that a level 0 unit can have in their attributes, where 1 is terrible, 2 is passable, 3 is above average, and 4 is excellent. With a 10-point limit, we could prevent any unit from having high attributes in every area.

The downside of this is that it sort of undermines our ability to balance units by giving them negative or positive Dynamics.

I feel like, over-all, the numerical, statistical attributes that a character has isn't going to be as important in this game as it is in some other JRPGs.

Now that I've picked the first unit for MY team, my opponent has a few considerations to make:
    *) They could pick a unit that's meant to directly counter my unit.
    *) They could a unit that begins setting up their favored team synergy.
    *) They could try to find a balance between those two options.

So basically, in this case, the enemy leader can see that I probably want to buff my team's defense. But they also have to consider that, whoever they pick, I might be able to pin them out of the fight. But if I pin them, I can't buff my team's defense. So, they could INTENTIONALLY pick a unit that I'd ESPECIALLY want to pin, and then they could effectively do a few different things:
    *) By FORCING me to PIN (use this first unit's secondary class), I have
       less MP, AP, whatever, to do my buffing.
    *) If I DO want to pin AND buff, that means that almost certainly this
       unit with mid-DEF and mid-HP is going to be stuck in the arena a
       lot, because I won't have enough AP to swap very often.

Maybe a big part of this game's tactics will be to try to force your opponent to use certain abilities to limit their other tactical options.

HereGoes brings up the idea that maybe some status changes will only really take affect after some ability is stacked a certain number of times, so the onus of STOPPING the opponent from hitting them with this ability or whatever falls on the player.

We've talked in the past about how a lot of the tactics in our game is going to be based around implementing special rules. Some RPGs are very straight-forward with units dealing direct HP damage to each other repeatedly until the fight is over. But in our case, we've put a lot of work into developing ideas for 'Dynamics' which are special RULES that the leaders can effectively bring into battle, and also making STATUS CHANGES much more involved than in other JRPGs, to the point where they do basically become just 'additional rules.'

The whole idea of the turn-to-turn tactics would be to DIRECLTY HIT YOUR OPPONENT while also trying to control their options and liberate your options by controlling the RULES that are being applied to battle.

We've talked about how status changes will have unique 'cure conditions,' and we've talked about how some will have 'trap conditions,' where they can be AFFLICTED, but they don't actually TAKE EFFECT until the trap condition is met.

In HereGoes example, maybe the 'trap condition' would be that the unit is hit repeatedly with some SPECIFIC ability or some KIND of ability or something like that. Then, you could sort of have situations where units are 'targetting' an enemy unit in a specific way as a means to cripple them. That adds some interesting tactics, where the afflicted party has to either remove the at-risk unit from the ring or limit the opponent's ability to target them the way they want to.



02/28/19
Me and HereGoes are talking about randomness in JRPGs -- we're talking about crits. EVERY RPG has a crit-system where attacks will have a low-probability of doing extra damage and / or triggering some kind of property, like a 'stun' or something along those lines (in top-tactical RPGs, they may push a character back to control spacing, etc.).

On top of this -- and I believe, in the same spirit -- is an 'accuracy' system, which is equally fundamental to RPGs. Typically, every attack in an RPG will have some chance to whiff -- usually somewhat small, but sometimes larger. Sometimes this depends more-or-less entirely on the ally and enemy unit attributes, such as using an equation to calculate hit-chance off of the ally's 'accuracy' and the opponent's 'agility'.

In some (but not all) RPGs units have an attribute that affects their likelihood to crit, such as "luck" or sometimes particular weapons, such as daggers, will have a higher likelihood to crit. Some entire builds for DPS units are created around essentially ASSURING a crit, which I've always thought was funny because, at that point, you're basically just dramatically raising that unit's attack power and sort of doing away with the idea of a 'crit'.

In some JRPGs, taking dramatically more damage in a single turn is not that significant to your over-all strategy. I've talked before about how I think it's a game-design 'trapping' in JRPGs when, after each encounter (Final Fantasy VII), your units' attributes are not restored: you have a finite amount of HP and MP until you rest.

But because the game designers wanted to ensure that the player can always WIN, they were really limited on how they balanced the number of encounters per dungeon. Encounters were random, and each player might take a different route through the dungeon. Therefore, the number of encounters between rests is very hard to predict, and so the individual encounters couldn't be that difficult. If the individual encounters sapped too much of the players' resources, the player wouldn't be able to complete the dungeon if they took the wrong route through it.

As a result, individual encounters typically have very little impact on your resources -- and goodvibe mentions that this is further augmented by giving the player access to things like 'potions' and 'ethers,' etc. Basically, what happens is that enemies do VERY little damage and allies have essentially unlimited HP. I feel like this is true of many classic and modern JRPGs.

The reason I mention that is that, in these games, when an opponent CRITS, that's almost the only time you actually have to worry about their damage -- and, because it's relatively rare, it doesn't impact your overall experience with the dungeon that much. Whether the opponent crits or not, you're gonna win, and you're still going to go into the next encounter with unlimited resources. In that respect, I feel like crits are probably a necessary evil because it's the only time when you take an INTERESTING amount of damage -- and because the over-all system is so player-friendly (in terms of letting them win), it's not really going to be a major factor in whether you win or lose, ever.

The point I'm trying to make is that, in a game where you're always under intense pressure to make the RIGHT decision to survive that round, having even a small element of random chance that's going to impact your likelihood of survival, which is already on the bleeding edge -- I'm just not sure if that's necessary, and I feel like it could do more harm than good.

HereGoes points out -- and this is something that I agree with, in an abstract sense -- that if there's an element of CHANCE in battle, that's something for the player to strategize around. You have to have a back-up plan or be able to think on your toes and come back from disastrous situations. You could go through the whole game playing for the worst-case scenario and have it be slow and tedious, or you could have players that take their lumps and roll with the punches who play more freely and then have to make up a lot of ground in the rare case that something were to randomly backfire. I like the idea of having to be prepared for the unexpected.

I totally agree with HereGoes that dynamism is important, and it seems to me like it's always a cool idea to introduce a situation where the player has to change their strategy. In the latter case, I would like for that to come from the opponent making an unexpected move, rather than having someone's carefully-laid plan be thrown into disarray due to a small random chance. You could plan around it. If you could reasonable say that the player COULD HAVE and SHOULD HAVE planned around it, they have no one to blame but themselves or their opponent's wiliness for the fact that they lost. They just weren't prepared.

I've played a LOT of RPGs in my life, and I always ignore random-chance mechanics. They have never made a game more interesting, for me. I have never planned a strategy around crits, nor have I had to because, typically, they're not that dramatic. Likewise, sometimes an attack misses, and I'm salty -- unless the opponent misses, in which case I'm happy -- but it doesn't really impact anything that much.

When there are abilities that have a high chance to CRIT, but at lower BASE damage -- or they have a high chance to MISS but at a much HIGHER base damage (or guaranteed crit, basically) -- I never use these abilities. To me it just always makes more sense to go with the stable, reliable option -- because, that way, I can more-or-less guarantee my victory, and the alternative is to take risks that I think are unnecessary to get the fight done with a little bit quicker.

I don't typically worry too much about crits or misses, and I don't touch optional mechanics that are based around chance. In games where crits and misses DO have a dramatic impact on battle, I tend to get turned off, because I feel like I'm being robbed -- either because I lost to a situation that was outside of my control, or because I won without needing to exercise as much strategy as I was hoping to.

Let's talk about Darkest Dungeon.

Dixx makes the point that fights in Darkest Dungeon are pretty short. One way that helps is that you're not wasting a whole half-hour (some JRPG boss fights) building up this advantageous situation only to lose it all to random chance. At that point, you've wasted a lot of time and you'd be real salty about that. So, maybe it's less devastating when a roll doesn't go your way if you're not as invested in that individual encounter.

Dixx is saying that you basically CAN'T survive long encounters, so it becomes TO YOUR BENEFIT to take risks to end the encounter as quickly as possible. This is a direct contrast to my assertion that, in JRPGs at least, it's almost always better to drag fights OUT. That's a problem I have with JRPGs in general: the fact that you can pretty much always win as long as you're willing to drag the fight out. Dixx is saying that, in Darkest Dungeon, it's actually MUCH riskier to sacrifice your kill-power for reliability. That's not really option.

In a game with random chance, your plan has to be flexible. There has to be some leeway.

I'm gonna make another point: if your plan has to be flexible, and you need leeway for the worst-case scenario to occur, that means that, if you DON'T roll that worst-case scenario, the encounter becomes easier.

It's our objective to create a battle system where every encounter is extremely demanding and every victory is hard-fought. And to that end, we've sort of been pushing in a mechanical direction that limits the per-encounter options of the player. I've repeatedly stressed that, in a game that's based around having a roster of a hundred characters, and swapping them in-and-out on a per-battle basis, that -- in battle at least -- players shouldn't have that much flexibility. If you give the player too much flexibility, they don't have that incentive to swap units to use different strategies, and encounters become trivial.

I'm gonna assert, boldly and broadly, that giving the player MORE FLEXIBILITY means making a game easier. I don't want for the player to be able to win in 100 different ways. I would rather have each encounter come with enough restrictions that it falls on the player to come up with a way to win, that's demanding of their understanding of the game and their units. I find that in a lot of JRPGs, because every unit is capable of every role, that winning is just something that happens. No matter what decisions you make, winning is very likely to happen; it seems more-or-less removed, a lot of the time, from the PARTICULAR decisions you made.

That was my childhood, and more recently I've gravitated toward games where you're given a challenge and it's up to you to figure out how to overcome it.

Darkest Dungeon, as a game, is about managing and overcoming risk and its inherent pitfalls. I totally believe that, as you get better at the game, you can strategize around what COULD happen in any given dungeon, and a lot of that probably comes from designing a team that's flexible for the worst-case situations that are likely to occur in any given dungeon.

I don't think that either HereGoes or Dixx would disagree that Darkest Dungeon is a game with RNG at its center, and I think that, if you're gonna succeed with that, you have to be able to design a team that is prepared for disaster. If you don't have personal experience with what sorts of things can go TERRIBLY WRONG in a dungeon, you can't plan for them, and you're gonna die -- but once you've experienced that disaster, you can do your best to be prepared for it, next time -- and then you'll lose to something else that you didn't see coming. This process probably is supposed to repeat until you know enough about what COULD happen to design a team that has a maximum level of survivability in the broadest situational variety.

I guess what I'm saying here is that Darkest Dungeon is designed around RNG. A huge part of the interest in designing a party is being prepared for the unexpected or what otherwise COULD happen but won't necessarily happen. But that's not our game, here, that we're working on. Here's what I want to put forward:

*) We've establish that our ideal is for encounters to be tactically demanding -- and, in that respect, easy to lose. Probably easier to lose than they are to win.

*) In a situation like that, combat decisions and party decisions (where you're picking a new party for every single encounter), how much of a role do we want randomness to play.

*) It seems to me that we have two options, as designers -- and maybe I'm wrong about this. I feel like, in a DIFFICULT game, random chance is either REDUNDANT and sometimes a NUISANCE, or it has to be a core, central idea to your game. Because if we have only a very small random chance for something to go wrong -- which only happens once in every ten fights -- then you can't plan around that. It's too rare -- and since every fight is already so bleeding-edge, it's going to be much more frustrating and costly when it DOES occur. At that point, it's so rare that you could almost ignore it but, when it does occur, it's so costly that it'll cost you the fight. And if it doesn't cost you the fight, then how can we say that the player is on the bleeding edge of victory and defeat. That's the ideal: the player is always on the bleeding of victory and defeat. If you have enough leeway for something to randomly occur that doesn't push them one way or the other, that's enough leeway for them to not be on the bleeding edge of victory and defeat.

*) Darkest Dungeon is a game -- and from what I hear about, I respect it's design immensely, I think it's cool -- where the whole game is balanced around the player creating a team that can deal with issues that may arise. Issues may arise, and are likely to arise -- although you don't know WHICH issues, exactly -- and you have to be prepared for those issues to arise. That's kind of the idea.

Furthermore, I'm positing that in games like Final Fantasy and Breath of Fire and SaGa and all these other countless JRPG franchises that I grew up with, randomness adds nothing. I've beaten all of these games completely ignoring it. The encounters just weren't difficult enough for me to ever have to worry about it. They all would've been the same without it. And to me, in that respect, it's just a trapping; it's just fluff. If you're trying to get to the core of the games' design, it's not significant. It's not a part of the game. That's wasteful, to me.

So it seems to me that there's three possibilities when you're talking about randomness in an RPG:

*) It's totally insignificant. Might as well not even be there.

*) There's at least enough leeway in encounters for the player to survive in the case that they get a bad roll. If they don't get a bad roll, the encounter is that much easier.

*) A game is entirely based around gambling and trying to stack the deck such that you have the highest percentage chance to succeed -- that's where the strategy comes from: trying to sway every roll to be as much in your favor as possible. In some games, you can end up controlling this entirely. In other games, for people who LOVE to gamble, you can only end up slightly influencing your likelihood to win -- but it's enough to still be significant to that player.

As a side-note, goodvibe makes the point that perhaps maybe the ONLY interesting battles in classic JRPGs were the boss fights -- and I can tell you why that is, because we've already talked about it today. In a dungeon, in a classic JRPG, individual encounters cannot sap your resources, because the game designers had no way of knowing how many of these fights you would need to survive before the dungeon was over. The designer couldn't balance the fights around this, so all of the fights have to be trivial. To me, that's sort of a sloppy game-design shortcoming that we've lived with through generations of JRPGs.

On the other hand, boss fights -- it's understood that you're GOING IN with max resources and that it doesn't matter how many resources you have LEFT OVER, because the dungeon is over. So the designers can design a fight that's meant to consume all of your resources, which means that you have to make tactical decisions regarding how to spend those resources.

Something you see more often in modern JRPGs, and something that I'd like to extend into our game idea, is that, after each encounter, your resources get replenished: HP, MP, etc. That way, we could balance the game so that each encounter is as dire as a boss fight in those classic JRPGs. We can assume that the player is going in with max resources and they have ALL of their resources to spend on this one battle. That could bring the player MUCH closer to defeat, in every encounter, than we could afford to do if the player had to survive some random number of encounters between having their attributes restored.

What GoodVibe is saying about boss fights is that, BECAUSE they're more tactical, and BECAUSE you're consuming more of your resources, and BECAUSE you're often MUCH closer to the bleeding edge of defeat, every MISS or CRIT is THAT much more significant. If you MISS, it becomes a huge disaster. If you CRIT, it gives you what feels like much more breathing room.

So can we say that the CLOSER the player is to defeat, be it some small number of turns away, the MORE significant RNG becomes.

Against bosses, randomness DOES matter but it's still RANDOM, so the encounter has to be designed around you winning in all but the worst-case scenario. Classic JRPGs also allow the player to stack the deck in their favor by GRINDING, which is an element you see less of in modern JRPGs and something that I wouldn't like to be a huge part of our JRPG:

Linear grinding just to raise numerical attributes. The stronger you are in a classic JRPG, the less likely you are to be boned over by the next boss's RNG. And the WEAKER you are -- hey, you might still be able to win if you get enough good rolls. With an ideal strategy and hypothetically PERFECT rolls, you could beat a lot of JRPG bosses pretty early. But if you grind enough, you could get all TERRIBLE rolls and have a really DUMB strategy and still win.

So there's, like, a balance between the differing POWER LEVELS of the ally and enemy party, and their respective GENIUS regarding strategy, and their ROLLS.

In our game, I've basically not been considering power-level as a factor. I haven't really been considering how much of a role grinding is going to play. We've been assuming that the allies and the enemies basically are equally powerful. So, there goes that element of the balance.

So now we're looking at the balance of GENIUS and ROLLS. But how much of GENIUS is based around compensating for potentially bad rolls. Again, I feel like for us to have that compensation we need leeway, and to have leeway means to make things easier, and to make things easier means to make them more trivial.

Another note is that, although I haven't stated it formally, we've been striving toward minimism insofar as numerical attributes. A lot of our gameplay is based around 'rules' and limiting your opponent's options by inflicting rules upon them. On the other hand, we only have four or so numerical attributes per unit.

Growing up, seeing numbers go up was hugely fun for me. That was a huge draw to JRPGs: grinding and over-powering my opponents just by having bigger numbers than them. It was a power fantasy. I also, in that same respect, loved when JRPGs had a TON of attributes to raise, and the combat would be a dance of all of these attributes.

But these days I feel like I'm almost trying to get rid of all of the numbers. In that respect, we've sort of been gravitating toward this design of having the bare minimum number of numerical attributes per unit possible. We always ask, "What do we need?" "If we add this equation, how much do we benefit?" "How much more interesting does it make the decision-making?"

I do feel like the attributes we have SUPPORT interesting decision-making. That's why they're there.

So if we're going to introduce some amount of randomness, do we need 'accuracy' as an attribute? Do we need 'dexterity' or 'agility' on the opposite side? Does having a chance to miss enhance the tactical experience or take away from it -- and if it DOES enhance it, is it important for that percentage chance to vary on a unit-by-unit basis.

Back in the 80's and 90's, JRPG players would find exploits in classic JRPGs which were not intended by the designers. This created a situation where, by using their brain, the player could become EXTREMELY overpowered. In some games, this was harder than in other games.

Because of that endorphin rush of finding a loop-hole and making your party insanely powerful because of it, you see a lot of modern JRPGs INTENTIONALLY built around this idea of finding exploits. The guys that designed these MODERN games grew up playing JRPGs and finding exploits. So you might play a modern JRPG and feel like you're a fucking genius for constructing your party in such a way that it has some kind of crazy synergy that makes you godlike -- only to find out that, in the next boss encounter, if you HADN'T done that, you'd probably be boned. So you weren't really as 'over-powered' as you thought you were.

Chance-to-miss and chance-to-deal-more-damage and chance-to-inflict-status. In many JRPGs, you'll just miss, sometimes. The harder the game is, the more frustrating it is to miss and the more ecstatic when the opponent misses. But that's distinct from Pokemon. We're talking about the 'bleeding edge' of victory and defeat and how, the closer you are to that edge, the more SIGNIFICANT RNG becomes. Not only is it SALTY to miss, but I feel like it's actually LESS salty when the BOSS misses. In some games, I feel cheated when I win due to a lucky roll. But if it's been a really long, hard fight, and the boss misses that's an endorphin rush, right?

In Pokemon, I feel like the RNG is so PROMINENT that it detracts from the strategy element. So I guess we need to make a distinction between 'PROMINENCE' of RNG and 'SIGNIFICANCE.' In Pokemon (Gen 1), RNG is VERY prominent and almost SINGULARLY significant in part because of that prominence.

But, in this hypothetical, bleeding-edge situation at the very end of a boss fight, maybe the impact the RNG has is very RARE, and so not very 'prominent,' but it does become more significant the closer you are to defeat. Can that be a good thing? It adds excitement, for sure. I'm not a gambler; I don't typically get off on random chance, but I can't deny there have been times where it's live-or-die and there's a chance to miss -- a small chance -- and I'm just praying to get a roll. That's kind of exciting. And if I lose because of that roll, it was because I made the wrong decisions earlier in the fight. I should have built up enough LEEWAY to get a bad roll by the END of the fight.

So how does this abstract itself into our hypothetical JRPG where you're always on the bleeding edge of defeat.

Well maybe the answer is that YOU'RE NOT always on the bleeding edge of defeat. That's not realistic. Because, at the start of the fight, you can't be on the bleeding edge of defeat. Every fight probably needs to have some kind of narrative arc where you're starting off fairly secure and you're trying to develop an advantage that will hopefully grow until you succeed.

Well, no. Because if you have an advantage that keeps growing and growing until you win, that's trivial. Really it should be like... the start of fight is you putting pieces into position to ensure that you can survive until the end of the fight. Kind of a similar concept, except that your advantage isn't growing until you win. Rather, both sides of the conflict are depleting their resources until somebody wins. So combat is about making the most sound decisions on how to expend your resources so that your opponent runs out of them before you do. On the one hand, you have to expend your resources to deplete THEIR resources DIRECTLY, but you also need to expend your resources in such a way that protects your resources. Like spending money to make money. To be the guy that has some left over at the end of the fight, you have to spend your resources -- and you have to spend them wisely. So, for that reason, it has to be close in the end. That's the idea, that's what I'm talking about when I say 'the bleeding edge' of victory and defeat: you're spending your resources in such a way that, in the end, you've WON, but maybe not by much,  because you had to spend so much to defeat your opponent.

I've said, in the past, that I've been envisioning this more and more like a card-game rather than a JRPG, and Magic is kind of an interesting example because it has 'monsters,' and they have POINTS involved (like damage and stuff), but the points play a MINOR roll compared to the strategy and the rules. That's kinda where we're at. Although the player has 'HP' in Magic, and although the UNITS have 'power points' and stuff, you wouldn't think of it as a JRPG. There's no grinding, and the points aren't that significant.

GoodVibe raises the point that, in a game like Magic, there is 'no RNG,' but that can't be true and that's really interesting. Maybe it would benefit this game, if, off-stream, I or somebody looked into how much of a role dice play in a game like Magic or Yugi-Oh! or Pokemon the card game. I think that dice can be involved in some capacity. Maybe in MtG there really is no dice but I'll bet there are competitive card games where dice is involved.

Dixx points out that RNG is a part of these games insofar as what hand you get from drawing cards. But, again, that's a controlled randomness where a big part of the strategy is DECIDING what cards go into your deck to WEIGH THE CHANCES in your favor of getting a good hand or otherwise being able to deal with getting a bad hand. Kind of like Darkest Dungeon. Just like Darkest Dungeon, because your entire HAND, aka ALL OF YOUR TOOLS, are randomly decided, you could make the argument that a game of Magic is "pure randomness."

But on the other hand, as you learn the game more, you see that not only CAN you influence your odds of victory by making tactical decisions before the game even starts, but those decisions weigh MUCH MORE toward your chances of victory than random chance does. Randomness is a factor. There have been many card game battles that have been lost because the player didn't get the cards they wanted when they wanted them. They had the worst possible luck -- they drew all the wrong cards. They lost in a big way due to chance.

We have to make the note, before we call it quits, that a card game is MEANT to be won or lost. If you lose once in a while due to a bad roll, it's not as painful, because you're winning and losing regularly. In a SINGLE-PLAYER JRPG, you just can't be expected to lose that often unless we come up with a way to make losing rewarding and interesting for the player. And maybe that's what we need.

Up to this point, we've considered balancing the game in such a way that the player can be expected to ALWAYS win, even if it's demanding. Maybe that's a fallacy. Maybe it makes more sense to go the 'card game route,' where, you're fighting an opponent of equal resources and skill, and it's highly demanding, and there's a luck element, and for all of these reasons, sometimes, you ain't gonna win. If you try to balance the game in such a way that the player always has a HIGHLY RELIABLE probability of victory, even if we HYPOTHETICALLY try our DAMNEDEST to make that victory difficult for them, maybe that's just not humanly possible. Is it possible to make a game where the player is always on the bleeding edge of defeat but will never necessarily lose. Probably not.

so maybe we need to re-examine what LOSS means in our game -- and maybe, once we accept that the player can and will lose, we'll be more comfortable introducing some randomness to make it more exciting. Maybe, at that point, randomness adds excitement more than frustration -- because loss becomes less frustrating.





03/04/15
---------------------------------------------
We're talking about death, today -- in video games, I mean. Let's put down some notes right off the bat:

*) In a game that's meant to be stressful, death has to carry some kind of frightening penalty.

*) In a game where you're meant to be always on the verge of defeat, you're GONNA get defeated -- maybe even a lot. Maybe a lot more than in many other games.

*) If you're going to be suffering defeat, repeatedly, we can't make the penalty for death too high -- or, if we do, we need to balance that penalty against something satisfying and interesting (or otherwise "rewarding") for the player.

*) How do we strike a balance between making death something that the player DOESN'T want to happen but also making it REWARDING.

Let's talk some basic ideas and tropes regarding death in video games.

*) HereGoes points out that, pretty much whenever you die in a video game, you lose some amount of progress. In classic platformers you would either get sent back to the start of the stage, or to a checkpoint -- or in some extreme cases, back to the start of the whole game. In classic JRPGs, you would often get sent back to your last save. In modern JRPGs, you're often just sent back to the start of the fight that you just lost -- but you lost the progress you'd made in that fight. In Dark Souls, you lose the progress you made cutting your way into the dungeon. You pretty much always lose progress.

*) If you use items during battle, they're lost for good. I'm not sure how I feel about that -- in fact, I'd be inclined to give a player their items back. HereGoes asserts that you "shouldn't" get those back. I recognize it as a trope that you don't get your items back, but it's that reason -- I feel like -- that I've never used items in any RPG. I feel like using items is a big risk, because you don't get them back -- and, at the same time, it's usually very reasonable to win without using them.

*) HereGoes mentions kind of a brilliant formula -- an insight into how to properly design items. He points out that there's a sort of pain (maybe an exciting pain) when you die after a long fight and you've lost the items you've been using, but you can offset that by giving the player lots of items. In fact, you could say that you're ENCOURAGING the player to take RISKS with their items if you give them LOTS of items.

*) In modern Roguelikes (or roguelites), when your protagonist dies, you lose all of the items you've collected and usually all of the traditional 'EXP,' but you somehow empower your next run so that, not only have you made progress, but there's also a sort of reward for dying because stress is down, again (enemies are easier). You can use your new knowledge of the game to play more efficiently the next time through. So, although death is painful, you're very much encouraged to jump back in.

****) Side note: HereGoes mentions a kind of interesting idea for a post-battle reward: the concept of a 'boost' that the player can choose from to make their ongoing progress easier or otherwise more rewarding.




Let's talk about what we KNOW about death in OUR game, or ideas that we've otherwise suggested and settled on in the past:


*) When a unit faints in battle, they lose 1 LP point -- and when they lose all of their LP, they die semi-permanently. They can't be revived any time soon; that unit is effectively 'lost'. LP can only be restored by resting 'in town' or 'at a save point' or whatever. You essentially can't restore it in dungeons.

*) I had a thought that, if your whole team is wiped, every unit you had on that team loses an additional LP. But you can keep pressing into the dungeon. You bring a deck of 10 units into the dungeon, and you only carry 4 into each fight. If you were to get wiped in a battle and all 4 of your units had 3 LP before they died, they lose 1 LP from the faint and then another LP from the wipe. They're all still alive after the fight. You can keep pressing into the dungeon. Even if they all had 2 LP before they fainted, they'd lose 1 LP from the faint and 1 LP from the wipe which would destroy all of those units -- but you'd still have 6 units in your deck to keep exploring the dungeon with.

*) I feel like units need to be destroyed to raise tension in battle and to encourage the player to not rely on the same units forever.

*) Some people hate durability in video games. Some people hate being 'forced' to stray from their favorite tools in a video game. Me and my brother always have disagreements about the importance of taking things away from the player. To him it feels limiting and as though it takes away the parts of the game that he LIKES to force him to spend time with aspects of the game he doesn't like as much. To me, when I have a winning team or a winning formula or I have a strategy that's working well, I will use it to a fault and I'll be bored unless the game pressures me into changing it up.

*) On this very topic, I've written essays about the two kinds of gamers: ALPHA gamers and BETA gamers. Alpha gamers often times will choose their UNITS or their WEAPONS or their SKILLS based on some kind of aesthetic ideal, to fulfill a power-fantasy. They want to use what's "cool" and they prefer when a game allows them to do that, even if it means playing at some disadvantage. BETA gamers are people who pick their tools in a game based on what's most efficient, and I feel like to make a game more fun for them the game has to be challenging enough that this 'most efficient' strategy is dynamic. If a game is easy enough for an ALPHA gamer to be able to get through it using WHATEVER tools they want, it'll be too easy for the beta gamer who wants a consistent challenge that asks them to examine their tools and always use the best ones for the job.

*) HereGoes points out that if he wants to make a team of all Big Monster Boys, he shouldn't be limited in that. I disagree completely. 100%. You can't get through every challenge in the game using only one party; the game's not gonna be engineered that way. You're gonna need to look at the tools each unit has and look at the tools that the opponent party has and very carefully pick your units to be able to defeat the opponent. I really want the game to be engineered such that the player has to look at the units that they have available and make very careful, deliberate decisions about which ones they use so much that aesthetics is virtually a non-factor.

*) In a game with potentially 100 different units, I would like for the game to be engineered such that the player has to find a use for a large percentage of them. That's why we've discussed an 'exhaustion' mechanic, where units sort of wear down in durability throughout a dungeon. That's why we discussed having units be 'destroyed,' if only a semi-permanent basis, so that they could somehow be revived at some great expense -- so that players wouldn't be parted from units that they've developed some kind of sentimental attachment to but so that their favorite units would be removed from play for some extended amount of time. The idea is that the player should be constantly shaking up their team to meet the needs of the next challenge. I don't want for players to feel like they have one core team of units and that's their team.

*) LP is a currency that each unit has on top of their HP and their MP. HP is traditional: as long as it's above 0, the unit can act. LP is a bit less traditional and I'm lifting it more-or-less directly from the SaGa franchise (it's also used in Steamband). It represents 'life points' or 'wound points,' and the idea is that, once a unit's LP hits 0, they can't be revived any more (with a phoenix down or whatever). In Steamband, once your LP hits 0, it's game-over. So a unit might have 400HP and 5LP. When a unit's HP hits 'zero,' if you want to keep using them in the fight, you need to revive them with some resurrection magic or by throwing a phoenix down or whatever -- but, on top of that, they lose an LP when their HP hits 0. So, you can only revive them so many times. On top of that, some VERY RARE attacks may have a CHANCE to deal LP damage directly. Or, in a game where random chance is minimized, it might just be a very rare, super-expensive attack that can only be used once per battle or whatever that directly reduces LP. In our game idea, I've put forward an additional consideration regarding LP: once a unit's LP hits 0, it's "destroyed" and can't be used for some extended period.

*) If a unit is low on LP before a fight starts, you can preserve that unit by not using them. Because you're picking 4 units from your party of 10 to enter any given encounter. So if you're really attached to a unit, you can take measures to preserve its LP. On the other hand, there would hopefully be times where your units are low on LP but, when you see what sort of team the enemy is using, you decide that it's worth the risk to bring in a unit who may very well be destroyed. In fact, there might even be times where you KNOW that a unit is going to be destroyed, but you need its abilities that badly. You kind of have to sacrifice that unit.

*) The idea with LP is that you wouldn't typically lose it all it one fight. It, along with 'exhaustion' (durability) would represent how your party weakens over the course of a dungeon. The deeper you are into the dungeon, the more careful you have to be because your party's attributes are lowered by their exhaustion and their LP may be getting kind of low.

*) I kind of like the idea of allowing the player to continue exploring the dungeon after a wipe, because they DO have 10 units and only 4 of them just got 'wiped'. I'm not 100% sure that I want to have there be an additional LP penalty for getting wiped -- I think it's kind of interesting, but it might be a bit too harsh. But I mean, you just got wiped; maybe it's suitable to have a somewhat harsh penalty.
   In any case, one thing that we definitely need to consider is how to make death more rewarding. Let's assume for now that, when your party is wiped -- obviously, all of your units have lost at least 1 LP because they all fainted, and maybe they all lose an additional LP as a penalty for the wipe. In either of those cases, you're still free to keep exploring... but would you? Would you want to? Why would you want to? One thing I can say, for sure, is that, if we're going to charge people an additional LP for wiping and then allow them to keep exploring, maybe our game needs a baked-in mechanic for teleporting to a place they can rest. Because it'd be frustrating to be stuck deep in a dungeon with only 4 units, all of them at high exhaustion and low LP -- you can't get out, supposing that there are random encounters.[

   In most games, the sensible thing to do would be to just send the party back to a place where they can rest after they get wiped. But maybe they DO want to keep pressing on, and maybe, even after the wipe, they still have all 10 of their units available. Or maybe they do only have four units by they think they can let it rock with those 4 units. So maybe there should be a way for a player to 'retreat'. They lose all of their progress in the dungeon but they won't lose any units on a semi-permanent basis because they were trying to escape the dungeon and got into a bunch of encounters that caused their team to die.

*) I think that we've alleviated the stress of death, somewhat, by allowing the party to continue exploring and keep fighting after a wipe. I just realized something. Maybe having the whole team faint, and, by extension, they all lose that LP for having their HP hit zero -- maybe that's penalty enough. Maybe we don't need an additional 1LP penalty to the whole party for a wipe, because they all lost an LP. Maybe that's the penalty. Maybe there is no other penalty for death. That makes a lot of sense to me.

*) In a game that's meant to be as DIFFICULT as this game, your units are going to need every LP they can muster. So, if you want to clear a dungeon, you want to keep as much of your LP as you can. Maybe, if everyone on your team dies, you're fine. You just wake up outside of that fight and nothing has changed except that you incur an 'exhaustion' penalty (like you do after every fight) and, since your whole team fainted, they all lost at least 1 LP.

*) Panders points out that we could have an exhaustion penalty for wiping, which would be more forgiving than an LP penalty (which could destroy units that wouldn't have otherwise been destroyed). But now that I've verbalized the preceding idea, I'm not 100% sure we really need an additional penalty for wiping, be it exhaustion or otherwise. But again, if we did want a penalty for a wipe, exhaustion would make more sense, I think, than my previous idea of penalizing everyone 1 additional LP.

*) I'm happy with that, but, on the subject of death and loss in video games, this is probably the time to talk about what it means for a unit to be 'destroyed'. When a unit hits 0 LP, it's 'destroyed'. It's DEFINITELY removed from the deck. The question becomes, how do you get that unit back. There are a few options.

*) The unit only comes back after the player gets a hard rest. To me, that's too forgiving, but it would at least effectively remove that unit from the deck for the rest of that dungeon. That being the case, we wouldn't even really need an explicit 'destroyed' status, because a unit which has zero LP couldn't be revived, anyway -- and they get their LP back after a hard rest. So, there is no concept of 'destroyed' in this situation. What's cool about this idea is that we could afford to be a LOT more liberal with abilities which directly reduce LP. It would still be a very painful and rare thing to lose LP directly, but if the worst-case scenario is that a unit hits 0 LP and they can't be used FOR THE REST OF THAT DUNGEON RUN, that's not the end of the world. The advantage of having a SMALL penalty for 'destruction' is that we can play with LP a lot more.

*) We already know that you can only swap units out of your 10-unit deck at a hard rest. And then, before each battle, you pick 4 units out of your 10-unit deck.

*) We talked about how units have one piece of 'gear' permanently bound to them. This equipment or whatever would essentially be what you 'caught' the unit in (like a Pokeball), and once the unit comes onto your team, this equipment can't be changed. This gear gives the unit their Tertiary class (which means that you can sort of control the tertiary class of your units) and it would also affect their growth (so you have some small control over their attributes, as well). It may also affect things, such as imparting a Dynamic of some kind.

*) What if, when you died, this piece of gear was destroyed. When you hit 0LP, I mean. And then, when you wanted to 'revive' that 'destroyed' unit, you would need to provide a new piece of gear for it.

Right away, that has problems. For instance, if you got a BETTER PIECE OF GEAR, you'd be encouraged PRETTY EXPLICITLY to just intentionally destroy that unit so that you could change its gear. This defeats the purpose of that piece of gear being permanently affixed to the unit.

*) Let's talk about a benefit of having a HIGH cost to destruction. If the unit can be 'revived' at a hard rest, that's a very LOW cost of destruction, and it means that players can SACRIFICE units more often (which is cool), and we can play a lot more with LP (which is cool). On the other, a benefit of having a HIGH cost is that we want for players to have to swap units around in their deck. If a unit can be resurrected just by getting a hard rest, they're never really removed from the 'deck'. Just during that dungeon. With a low-penalty, there's never a situation where you're at your bed and you have to fill a spot on your deck because one of your units got destroyed.

*) When you enter a dungeon, you have 10 units that you're carrying with you. When a fight starts, both players roll for initiative and whoever wins gets to pick their monster second. And then both players pick their units, one at a time, from their deck. The idea is that, if you win initiative, you can counter-pick your opponent from the units in your deck. And then, obviously, in battle, only one unit is in the ring at a time, so you have to swap units in and out of the ring from the 4 units you brought into that fight.

I think HereGoes complaint is that you can't swap in another unit from your deck during a fight? I don't see how swapping units mid-fight would work.

Both the ally team and enemy team have four units in the battle. They both choose those 4 units before the battle from a deck of 10 available units.

Let's say that you've caught 100 monsters. Before you enter a dungeon, you pick 10 of those monsters to take with you. Before each fight, you pick 4 of those monsters to fight with you. So you have flexibility regarding who you bring into each encounter (to counter-pick your opponent), but that flexibility is limited to the 10 that you brought -- you can't just pick 4 units from your entire menagerie of 100 monsters. You pick those 4 from the 10 you brought into the dungeon. The idea is to encourage the player to create a dynamic within those 10 units that make them flexible with which 4 are chosen in what fights. And also, by limiting the in-dungeon roster size to 10, we can give each unit durability, so that you can selectively NOT use certain monsters to keep them fresh.

The way that pre-battle starts is that, if I got initiative, I could see which SINGLE unit they've picked. Then I can pick a unit from MY team. Then they see what unit I picked and THEY pick their SECOND unit. Then I see what unit THEY just picked and I picked MY second unit. Until we both have 4 units.

I think what HereGoes is saying is that he doesn't want to have to pick 4 units before each fight. That's too much work.

I think that having a roster of 10 from which you pick 4 is good considering the durability. It's good considering that different units have specific functions; not every unit is good for every task. In fact, each unit is really only good for one or two tasks. We have two options:

1.) Youi sort of have to let the leaders see each other's teams so that they know what sort of units they need to compete in that battle.

2.) You go the route of making each individual unit much more flexible, which is what I'm really trying to avoid. I feel like, in most JRPGs, units are much too flexible and that's why you don't ever need to change your units.

In Persona, and in Breath of Fire IV, you have 3 units 'in the ring' (they're all able to act and they're all vulnerable. In Pokemon, and in our game, we only have 1 unit in the ring), and you have some number of units OUT of the ring, and you can swap them in and out more-or-less at will. Our game idea isn't so different, except that we only have ONE unit in the ring, and you can't swap out to your ENTIRE TEAM -- you only have 3 other units 'in the back row'.

The idea already is that you have ONE unit in the ring, and you have three units 'in the back row' which you can swap to at will.

By HereGoes' recommendation, we could allow the player to only bring 4 units into the dungeon. Then we'd have no 'deck' and all of the units on the team would be swappable in battle.

The other way we could do this would be to have our deck of 10, and then have one unit in the ring and 9 units in the 'back row'. Then, you could swap the unit in the ring for any of your 10 units, and, in every night, you would need to knock out 10 units to win, and you'd have 10 units worth of flexibility in every fight.

The hope with the pre-battle 'draft' is that it would be, itself, pretty interesting and, of course, a MAJOR part of the strategy.

If they pick a unit that's a status-afflicter, I might want a unit that can cure status changes. If they go for a couple big attackers, I might decide that, in this fight, I need a dedicated tank. And then the idea is that, when the fight actually starts, you sort of have to utilize your team's dynamic to surprise and defeat your opponent. Picking your four units from your deck of ten should be an exercise in strategy. Because each of your ten units is not suited to every purpose. If you just brought in the same four all the time, there would be many situations they couldn't handle. So, by giving you 10 to choose from, you can be prepared for a variety of situations -- and you could, when creating that deck, decide how specialized you want to be versus how flexible you want to be. In either case, you don't have the flexibility of your entire collection of 100 units. It's a preparation game. It's a game of looking at your 100 and thinking about what situations you're likely to run into in the next dungeon. You pick 10 to suit those situations and then, as those situation arise, you pick the 4 that are the most apt to handle it -- or you pick 4 that are able to handle it while still preserving the LP or exhaustion of units that you want to save.

It does slow down the second-to-second trading of blows, but this is a game of strategy and I don't think it's too much to have a phase before each fight where you are having a battle of wits with your opponent as you're picking units. It's a strategic back and forth.

*) Panders brings up an idea where, instead of seeing what the enemy is PICKING and NOT being able to see their deck, we instead see their DECK but don't see what they're PICKING. That's a really cool idea; it strikes a different balance between the 'counter picking' and the deck-preparation aspect. It adds another level of meta to preparing your deck at your hard-rest.

It definitely would make the fights less-predictable. You would look at the opponent's team and basically say to yourself, "Who are they likely to pick when they see MY team. Who on MY team would they have the most trouble dealing with. Who on THEIR team would I have the most trouble dealing with."

Panders points out that, with THIS mechanic, there's more of an element of guessing. But, in his words, you're rewarded for "calculated gambles." Because you can see their team. You can imagine what sorts of teams they might go with. And you have to make a guess, and so do they.

A downside of it is that it encourages the player, when forming their deck at a hard rest, to construct teams that have strong INTERNAL dynamics -- because you know for a fact that you'll never exactly what kind of team you're up against. It rewards you more for having a strong 1-player game, rather than reacting directly to the precise challenge at hand. An advantage of constructing your team based on the opponent's team is that you're rewarded for building your deck and understanding your individual units such that you can deal with a GIVEN situation. And dynamics WITHIN that TEAM of 4 are sort of secondary.

If you can build your team of 4 based on what 4 units your opponent picks, you're gonna have to construct your deck such that all 10 of your units can hypothetically have good synergy together. But if you can't see what 4 units your opponent has picked, you're much more rewarded for creating your deck with essentially 2 teams of 4 in mind, constructed so that their Dynamics work well together, and they're strong in a variety of situations.

If it's always a guess (be it an educated one), it might be TOO MUCH OF A RISK to ASSUME anything about your opponent's team, ever. So the best choice would be to stick with a team that's strong, on your side, which sort of defeats the purpose of the 'picking the right tools for the right job' ideal.

GoodVibe brought up an idea that I think is really fun. It adds some of the excitement and dynamism of Pander's idea (where a part of the strategy of the preparation phase is planning for who they COULD pick) along with the steadfast 'tool for the job' strategy of my original idea (where you each pick units one-at-a-time, and so you are PARTIALLY picking based on who your opponent picks, but also PARTIALLY guessing because you don't know who they're going to pick NEXT). GoodVibe mentions that maybe you see their entire DECK, but you only can see TWO of the units they pick.

What we can say for sure is that ALL of these approaches are interesting and lend themselves to different types of teams and balance. I think that the way that you handle your pre-fight preparation should be bound as some kind of rule to whatever 'Leader' unit you've picked. Maybe you can choose which of these strategies you go with, with pros and cons for each type. Maybe, if you want to see your entire opponent's team, one-at-a-time, they can also see your entire team. Maybe if you want to conceal your team by only showing your opponent your DECK, maybe you can only see their deck. Maybe there's a build where you CAN'T EVEN see the deck. Maybe it's just a raw guess from the entire collection of monsters.

Maybe whoever wins initiative gets to choose how the pre-fight routine goes. You could totally change your strategy based on how much access you have to your opponent's team before battle, and vice-versa. That's kind of really sick. That adds more depth to the process of creating your 10-unit deck: now maybe you have to consider that, although you want to have some units there to handle SPECIFIC circumstances, you also have to be prepared to deal with the unknown at times.

Even in a one-player situation, maybe the pre-fight draft rules differ from one fight to the next. You have to roll with the punches and, depending on what sort of draft you end up getting -- that could have a very big impact on what sort of teams you pick and, by extension, how fights play out.




03/07/19
Today, I want to talk about status changes and how we're going to handle them behind-the-scenes. This process will be more-or-less the same for 'dynamics'.

So, we've discussed before about how our game idea is based very heavily around the notion of 'rules'. Some RPGs are more based around numbers but we're sort of minimizing the importance of unit attributes and skill 'damage' and we're focusing more on limiting and augmenting strategic options using special 'rules', such as, 'you can't do ______ for _____ many turns," or, "whenever you _________, you're going to take _____ damage."

These rules, right now, come in a few different forms:

Unit Dynamics, which are special rules that apply whenever a particular unit is in a battle.

Battlefield Dynamics, which are special rules that apply for the course of a single fight.

Status Changes, which are special rules that can be temporarily applied to Units or the Battlefield during combat.

We've got Leader Dynamics, which are special rules that apply when a particular Leader is in battle.

We may have equipment Dynamics, which are special rules that apply whenever a Unit is equipped with a particular piece of gear.



The question is, considering how varied these rules can be, how are we going to implement them from the programming-side. To quote our friend dixxucker, "is that even feasible." I do believe it's feasible, but it's going to take a little bit of creativity and abstract thinking.

Basically, my first thought is that the flow of combat needs to trigger a variety of events which can, themselves, trigger the effects of dynamics and status changes. So, after a unit takes a turn, we have to check for all of the rules that would apply after that unit takes a turn. Before damage is calculated, we need to check all of the rules that may apply before damage is calculated. At first, this seems like a monumental task to design, but I'm convinced that if we can think outside of the box there's probably some uniform and rational way to implement this.

How should dynamics and status changes be stored, internally? As one big list, per-battle, that we can iterate through and check "is now the time to apply this?" Or should they be stored as the PLAYER might imagine, which would have them be attached to the units or the leaders or the battlefield that they're directly affecting.

The latter option, although it seems sensible, at first, from the player perspective, might not make the most sense programatically -- and that's because some of these rules might be so complex that it can be difficult to establish firmly who and what the rule is DIRECTLY affecting, or otherwise who it should be attached to. It may affect more than one unit. It may have a dynamic affect based on the relationship between two units. Maybe it would make more sense to just have every special rule floating in a 'list of rules' that the battlefield contains.

But, for the player, that does seem like it could be a bit difficult to manage. On the other hand, maybe that would make it SIMPLER to manage. In Final Fantasy Tactics Advance, each battle has a list of 'Laws,' and these Laws will have a negative effect on one or both teams. A big part of the game is to manipulate the Laws. You can remove Laws that are hindering you and you can add Laws to hinder the opponent.

In FFTA, these Laws are presented as just one big list that applies to the battlefield. Maybe, in our game, we look at these 'Dynamics' and 'Status changes' similarly. Maybe they're not really ATTACHED to any unit, but rather that unit BRINGS THEM INTO the battle, and then they apply to the battle.

So, for a curative class, for instance, they wouldn't necessarily target a unit to relieve the effects of some rule against them, but rather they would target a rule that's, itself, an object floating around in battle. Likewise, perhaps an 'afflictor' class wouldn't target a unit to afflict but would rather just create a new rule to float around in battle.

Let's not totally give up on the idea of having these dynamics and status changes attached directly to the units, because it might be feasible -- and, if it were, I think it would be very rational.

Let's create an example and imagine how it would play out:
Let's talk very simply about a very simple status change: classical 'poison'. We'll look at it in a variety of contexts.

1.) The afflicted unit takes damage after they use an action.
    *) We need to go through the unit's Status Changes at the end of every
       action and find out if we need to do anything.
        -) Right away, I realize that, if you look at things abstractly,
           you don't really need as many 'event types' as I expected you
           might.
        -) For instance, even if some rules only take place 'after the unit
           deals damage,' you don't need some kind of internal event to
           proc that's unique to when the unit deals damage. Instead, you
           just check after they take a turn and ask what ability they used
           or how much damage they dealt.
        -) So, basically, we need some kind of 'post-action report' that's
           saved as an object, and then, whenever a unit takes an action,
           all of its status changes will be checked against that report to
           see if anything needs to happen.
            +) Right away, then, I feel like we need to conceive a sort of
               'report' object that will be integral to the handling of
               status changes and dynamics. Whenever anything HAPPENS, a
               report is generated, and then all of the rules are checked.
    *) After the unit takes an action, we run through the list of rules
       that trigger 'after a unit takes an action'.
        -) So, we need to figure out what sorts of scenarios in combat will
           potentially trigger a status change -- not the EXACT scenario,
           but rather the POINT in the FLOW of combat where we'll need to
           check for status changes. We'll say the PHASE of combat where we
           need to check for status changes.
        -) Every PHASE of combat should generate some kind of report, which
           can then be read by status changes to decide what they wanna do.
        -) So, in other words, if we have ideas for TRIGGERS for rules, we
           need to decipher at what PHASE those rules will take place.
        -) Then, WHENEVER COMBAT REACHES THAT PHASE, we can check to see if
           the rule's trigger-conditions were actually met or not.
        -) We have to differentiate, mentally, between the 'triggering' of
           a rule and the phase during which we CHECK to see if a rule was
           triggered.

2.) The unit takes damage whenever the leader's turn ends.
    *) Need a 'phase' to be registered whenever a leader's turn ends.

3.) The unit takes damage whenever the leader's turn begins.
    *) Need a 'phase' to be registered whenever a leader's turn begins.

4.) The unit takes damage whenever he's swapped into the ring.
    *) Need a 'phase' to be registered whenever the leader takes an action.
        -) This is an example of a situation where the 'object' that the
           status change is actually ATTACHED TO is counter-intuitive to
           the player. You would think that this 'poison' would be attached
           to the unit that's taking damage. However, it might make more
           sense to consider it as being attached to the LEADER, because it
           takes affect whenever the LEADER does something (swap a unit).
        -) From the player's perspective, they might see rules as having
           relationships in a logical context that's different from how
           things are handled behind-the-scenes. So, should we try to
           accommodate the player by saying, "KReich is poisoned," -- as
           in, they can check KReich's status and see, there, that he's
           poisoned -- or should we just have a big list of Rules and the
           player can see, there, "If KReich is swapped out of battle, they
           take damage."
        -) If we DID decide to attach this 'poison' to KReich, all we'd
           really need to do would be to check EVERY UNIT IN BATTLE for
           status changes / dynamics that are triggered on a certain phase
           every time that phase occurs. So, we could attach this poison to
           KReich, and then, whenever the leader takes an action, we could
           iterate through every unit in the battle and check for their
           rules which take place after the leader takes an action. That
           seems reasonable. Every time a phase occurs, iterate through
           every unit and check to see if they have any rules which we need
           to evaluate whenever that phase occurs.
        -) That means the only real difficulty with attaching every 'rule'
           directly to a unit is in situations where that rule might have a
           very indirect relationship with multiple units; how do you
           decide where that rule goes? Well, maybe that's exactly why we
           have the Battlefield to attach rules to. May- let me cut myself
           off right there. Let's be clear: if we're going to iterate
           through every unit, on every phase, to see if they have special
           rules that might take affect on that phase, then it's internally
           NO DIFFERENT than just using one big list of rules. That's
           liberating, because it means that it really DOESN'T MATTER,
           MECHANICALLY, who we attach these rules to. That allows us to
           attach the rule to wherever we think would make the most sense
           for the player. That way, if we have something simple like
           'poison', we CAN put it on the STATUS SCREEN for the unit that
           is poisoned. It is attached to that unit. And if the player
           wants to check all of the rules that are attached to the
           battlefield, they can do that to.
        -) But we have a problem with this object-oriented approach to
           saving rules as attributes of Units and Battlefields, and it's
           related to how a rule might abstractly define a relationship
           between multiple units. In other words, we could conceptually
           have 3 units who all share a single status change. For instance,
           you COULD just poison 3 units individually with the same
           effectiveness of poison, but if a healer were to neutralize that
           poison, they could only neutralize it for one unit. What if it's
           a poison cloud that only affects 3/4 units on your team. If you
           cure it, it would stop affecting all three units.
        -) I have a proposal. What if a 'rule object' saves a list, FOR THE
           PLAYER'S CONVENIENCE, that's a list of objects that the status
           change or rule 'is affecting'. That way, if you check KReich's
           status, you can see that he's under the affect of 'Poison
           Cloud', and if you check Vencabot's status, you can see that
           he's ALSO under the affect of 'Poison Cloud,' and that's
           because, when printing their status screen, the client is
           running through the list of active rules and seeing if any of
           them apply to that unit. Poison Cloud isn't attached directly
           to a unit -- rather, a unit is attached to Poison Cloud. So the
           Rules are objects and the things they're affecting are attached
           to THEM.


Let's just say that our Battle object, which represents an entire battle, has a dictionary of Rules, and the dictionary is configured like so:

{"phase_str": [List of Rules that can be Triggered on that phase"], ...}

So, if I were to afflict KReich with Poison, I would register it to the Battle like:

my_battle["post_action"].append(my_poison_rule)

And then, whenever a phase of battle occurs, the Battle would go through its list of rules for that phase.

We talked before about how a 'Report' object is going to be integral to having Rules be triggered properly. So we need to decide what sorts of information are important to record in these reports, insofar as it relates to triggering rules.

Furthermore, what I find kind of complicated about this is the ABSTRACT THINKING that goes into defining when a 'phase' occurs. If phases occur AFTER stuff, then we have a report to work with, hypothetically. If phases occur BEFORE stuff, we don't have any report to work with. So... do we abstract every phase as being AFTER something, or do we have a mix of phases where we DO have reports (after things), and where we DON'T have reports (before things).

For instance, we could very reasonably have a 'phase' that occurs whenever a leader starts their turn, or "before their turn." Or we could look at that as being the END of the opponent leader's turn.

We could have a phase that takes place BEFORE damage is dealt (doesn't really make sense). Or we could have a phase that takes place AFTER an action is picked, or AFTER an action's effect is calculated. So, a unit would pick an action and then its affect would be calculated and then it could submit a report for what it's gonna do, which could trigger a variety of rules (such as reducing the damage or whatever).

Let's do an example to help us decide how we want to break this up.

Let's say that Vencabot is afflicted with a Rule that is explained thusly: "Whenever Vencabot uses Headbutt, he will do half damage." Soft-Head status.

What's interesting about this rule, right away, is that we APPARENTLY cannot just flatly lower Vencabot's attack power, because it only affects him when he uses a single skill or ability. And affects his damage output, which is weird.

My first thought is that this Rule would apply to a phase after a unit PICKS an action. if Vencabot PICKS Headbutt, then we go through all of the rules that occur after an action is picked, and we check the report. The report says that Vencabot picked Headbutt, which triggers our Soft-Head rule. So what does it do? How does it take its effect? We TRIGGERED it, and I'd say we triggered in a pretty reasonable way.

How does Soft-Head lower the damage that Vencabot does with Headbutt. I feel like it needs access to the damage calculation that was already done. Because the rule plainly states that "headbutt will do half damage." EVEN IF WE COULD, if we lowered Vencabot's attack power only during that single action, it wouldn't necessarily halve the damage, because of factors like defense scaling, etc. So the Rule would need access to the damage calculation and it'd need to be able to affect that, somehow.

The Rule must be able to define AND REPLACE an effect that would've otherwise occured. INSTEAD OF dealing full-damage, this headbutt now deals an AMOUNT OF DAMAGE DEFINED BY THIS RULE. So the damage it would've done is REPLACED by an amount of damage defined by this rule.

Okay. Maybe RULES also generate a report of some kind which the game engine then uses internally to decide WHAT DO. So every phase generates a report that tells the game WHAT DO, and the Rules can manipulate that report, essentially.

So, after an action is picked, part of the report is the EFFECT THAT THE ACTION WILL HAVE. And then, whenever a Rule runs, it generates a report of what IT'S EFFECT WILL BE, and then, once all of the Rules have done their thing, the Battle will look at these reports and decide what effect will occur.

    -) Side-note: a phase should be triggered whenever a rule is triggered.
       That way, we could have rules that trigger only when other rules are
       triggered.


Let's make an even more complex, 'worst case scenario' example for figuring out how Rules will take effect.

Let's say that Vencabot is inflicted with Soft-Head status: whenever he uses Headbutt, he will deal half of the damage he would have otherwise dealt. But he's also affected by a status change where-by, whenever a rule is triggered by his using a particular ability, he gains 3 defense.

I feel like, not only does this seem like a nightmare scenario, as a programmer, but it's also CORE to the IDEA of our game. This is a problem we MUST solve, because this situation is interesting in the way that I hope our game will be interesting: we have two rules in play that are, combined, presenting a interesting dynamic. You can use combinations like this to develop really crazy strategies.

So how does it trigger.

Well, Vencabot chooses to use Headbutt. This generates a Post-Action-Choice Phase report which explains that Vencabot has chosen to use Headbutt on OhSeraph, and it's expected to do 10 damage.

The Battle then goes through all of its Rules that apply to the Post-Action-Choice Phase, and it feeds those Rules the report. Those Rules can then decide, based on that report, if they want to trigger.

So, as you might imagine, many of the Rules that apply to this Phase are not triggered by this report; they just pass. But Soft-Head is triggered because VENCABOT has chosen to use HEADBUTT. So now it takes action.

It can see from the report how much damage this Headbutt is expected to do. So, just like CHOOSING TO DO HEADBUTT DID NOT HAVE ANY AFFECT ON BATTLE -- it just generated a report -- the triggering of this or any rule ALSO does NOT HAVE ANY AFFECT ON BATTLE. It just generates a new report.

In doing so, we trigger ANOTHER phase. Now that a RULE has been TRIGGERED and a REPORT has been GENERATED, the Battle has to go through all of its Rules that would apply to the Rule-Has-Triggered Phase. It feeds all of THOSE Rules the report generated by Soft-Head, and most Rules pass. But 'Resilience' IS triggered, because VENCABOT gets more DEFENSE whenever a RULE IS TRIGGERED based on him USING A PARTICULAR SKILL.

Resilience generates a report proposing that Vencabot's defense go up by 3.

So, here we are. Vencabot picked an action, and the 'Post-Action-Choice Phase' is now complete. The result is that we have three reports: the base effect of the action choice and the reports of two different Rules about what they want to do.

It seems to me like the Battle now has to look at these reports and decide what the actual affect is of this action that was chosen.

Well, adding defense to Vencabot seems easy. The Battle reads that Resilience wants to add defense to Vencabot, so it adds defense to Vencabot. No problem.

The strange part is how Soft-Head REPLACES the effect that would've occured when Vencabot used Headbutt.

Well, the first solution that comes to mind is to make an action's 'effect' into an object. An 'Effect' object or whatever. The reason you would do this is so that it could, internally in Python, have a unique ID. It has a space in memory; it has a pointer. It has an identity. What's important about this is that the Soft-Head rule could say, in Python'ese, internally, "Replace EFFECT_A with the EFFECT_B that I just made."

Perhaps the way to say it would be to have an effect that DEALS 5 DAMAGE and neutralizes the 10 damage.

Kenny proposes that the damage calculation (or 'effect calculation,' we'll say) could be a function, itself. And so, when a Rule is triggered, it says, "Don't use function_a for damage calculation. Use my function, function_b." And function_b would have access to function_a, so it could run the vanilla calculation and then mess with it. Or it could hypothetically halve Vencabot's ATK and then run function_a and then restore his attack power, for a rule like, "When Vencabot uses Slap, he has half ATK."

So let's further abstract Kenny's idea. Basically, the ACTION you PICK will have an AFFECT that's determined by SOME FUNCTION. Whenever a Rule is triggered, it ALWAYS REPLACES that AFFECT FUNCTION with its own AFFECT FUNCTION, which will often, itself, call the ORIGINAL affect function.

So really, when a rule is triggered, what it's doing is replacing the Affect that otherwise would've occurred, where the 'affect' is abstracted into the notion of being a function. It would ALSO generate a report about what it wants to do, so that other Rules could be triggered -- and those Rules would ALSO take whatever the current Affect function is and replace it.

So, by the end of the phase, we have a Affect function to run. It will be calling the affect functions defined by many other rules. It could have been changed ten times and, each time, it generated a throw-away function, and now we're probably gonna call all ten throw-away functions.

Every time something needs to HAPPEN in the battle, we're creating a new function do define that it's happening.

I have a problem in mind: what about this 'Tender-Head' Rule that hypothetically halves Vencabot's ATK while he's using Headbutt. What's frustrating about this kind of Rule is that has a set-up and a clean-up phase. That's not a problem -- but anyway, let me follow through with my thought, even though I think I figured out the solution.

So, Vencabot wants to deal 10 damage with headbutt. But Tender-Head replaces the Affect function that would've done 10 damage with a new function that halves his ATK, then calculates damage, and then restores his ATK. My issue was that, if you want to add a rule that says, "If Vencabot's ATK is lowered, his ATk is actually doubled," how do you implement that, at this point?

For one thing, the 'angery' rule is triggered by a Report. All Rules are still triggered by a Report. The Report said that Vencabot's ATK was going to be lowered by 5 for the duration of the action. That triggered the Angery Rule, and now, by Kenny's suggestion, Angery has access to the Affect function that defined the damage he was gonna do (which was gonna be with half atk power).

Well, the function we have -- its main output is dealing damage. It deals damage. It lowers Vencabot's atk, then it deals damage, and then it raises Vencabot's atk. How do take that function and change it so that Vencabot's ATK is actually doubled, instead.

Let's be very clear: we can't LITERALLY ALTER a function line-by-line. We can't. All we can do to 'update' this function is to CALL that function within ANOTHER FUNCTION.

Let's be even more clear, 'cause I've just realized something. This 'affect function', itself, CANNOT deal damage. Because it can ONLY calculate an affect.

The 'vanilla' function was to calculate damage. The resultant function after Tender-Head is triggered is also meant to calculate damage. So what about this Angery rule? It's proposing two things: a change to Vencabot's ATK and re-calculate the damage. How does it recalculate damage after the damage calculation has already been fucked with once. Can it 'undo'? This is a weakness of Kenny's proposal regarding affects being 'functions.' If proposed effects were OBJECTS, like in my suggestion, maybe -- you definitely could just REPLACE an affect, right? You can't do the same thing if the effect, itself, is a function...? But even then, in Kenny's suggestion, we've established that the AFFECT is not a function -- it's still a PROPOSED affect, such as 'damage calculation'.

Let's be clear: some Rules would affect the SET-UP for an action (such as lowering attributes before damage calculation) and others would affect the RESULT of an action (such as halving the damage that would've been done). Some Rules would probably affect both.

This is my current thought: what if we define YET ANOTHER abstract object type. What about a 'modifier' object, which defines how some value is going to be modified by a Rule, and when. Because Rules are always going to modify SOMETHING. If a Rule adds a bunch of Modifiers to a phase, other Rules can read or negate those Modifiers.

Some Modifiers might apply BEFORE the affect is calculated and some might apply AFTER the affect is calculated, essentially replacing the affect.

What if these Reports put forth a list of proposed Modifiers, essentially. And then the Rules could apply more Modifiers. And the reports would REPORT which Modifiers were added by which Rules, which could, in turn, trigger other Rules.

To be extra clear, there are many more affects of an action than damage.

I want, before we play 3rd Strike, to propose a full example of how my 'modifier' system would behave.

The Battlefield has a Rule called 'Tender-Head' on it, which is in the 'rules' dict at the key 'Post-Action-Choice'. It's explained to the player as such:

"Whenever Vencabot is using Headbutt, he has half ATK."

The Battlefield has another Rule called 'Angery' on it, which is in the 'rules' dict at the key 'Post-Rule-Trigger'. It's explained to the player as such:

"Whenever Vencabot's ATK is lowered as the result of a Rule, his ATK becomes doubled."

By picking Headbutt, the Post-Action-Choice phase is triggered, and a Report of Vencabot's pick is generated for all of the Rules that care about this phase to read.

So, we have a report that explains as much as we can program in to explain about what just happened and what is expected to happen next. So, in abstract terms, the report would say something like, 

"Vencabot picked Headbutt. It's gonna do 10 damage."

In, "It's gonna do 10 damage" would be a proposed modifier. Maybe the entire report is made up of a list of 'Modifiers,' that define how the game is proposed to play out.

[Vencabot picked Headbutt]
[Vencabot targeted KReich]
[KReich is going to take 10 damage.]

This report is fed to every Rule that cares about this phase of combat. When Tender-Head sees the modifier, "Vencabot picked Headbutt," it creates a few more modifiers, and inserts them into the list, in the order they would occur (???).

[Vencabot picked Headbutt]
[Vencabot target KReich]
[Vencabot's ATK is halved.]
[KReich is going to take 10 damage.] * This was NEUTRALIZED by Tender-Head.
[KReich is going to take 3 damage.]
[Vencabot's ATK is restored.]

Now, a post-rule-trigger phase is triggered, and this report is sent to every Rule that cares about this phase, including Angery.

Angery sees this rule and is triggered because it sees both, [Vencabot picked Headbutt] and it sees, somehow, that [Vencabot's ATK is halved] is the result of that.

So now, with this list of currently-proposed modifiers, it can change that list to suit its own ends.

[Vencabot picked Headbutt]
[Vencabot targeted KReich]
[Vencabot's ATK is halved.] * This was NEUTRALIZED by Angery.
[Vencabot's ATk is DOUBLED.]
[Kreich is going to take 10 damage.] * This was NEUTRALIZED by Tender-Head.
[Kreich is going to take 3 damage.] * This was NEUTRALIZED by Angery.
[Kreich is going to take 17 damage.]
[Vencabot's ATK is restored.] * This was NEUTRALIZED by Angery.

This is how I imagine it. We have this proposed list -- a 'report' -- of things that are GONNA HAPPEN IN THE GAME. Rules can read this list of things that are gonna happen, and they have authority to say, "No, that's not gonna happen, after all. Instead, this'll happen."

Kenny's idea is dramatically different in its design, which is part of what makes programming so fun. Because we're out of time, I'm hoping that Kenny will record his thoughts on Discord and we can talk about it next time in more depth.

Basically the report is a list of instructions to the Battle, in order, and these instructions can trigger Rules, which can then modify that list of instructions. In fact, we could abstract these notions as being 'events', right? And we could fill this event log with all kinds of interesting stuff that could trigger all kinds of interesting stuff -- including proposed changes to the event log -- and then, once the phase is all done, the Battle would read this event log and do all the stuff that needs to get done.
